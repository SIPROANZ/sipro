-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.acreedor
(
    id integer NOT NULL DEFAULT nextval('acreedor_id_seq'::regclass),
    rif character varying(20) COLLATE pg_catalog."default",
    denominacion character varying(70) COLLATE pg_catalog."default",
    CONSTRAINT acreedor_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.actividades
(
    id integer NOT NULL DEFAULT nextval('actividades_id_seq'::regclass),
    meta integer NOT NULL,
    actividad character varying(200) COLLATE pg_catalog."default" NOT NULL,
    desde date NOT NULL,
    hasta date NOT NULL,
    CONSTRAINT actividades_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.actualizaresponsable
(
    cedula integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.ajusteejecucion
(
    ejecucion integer NOT NULL,
    inicial numeric(20, 2),
    CONSTRAINT ajusteejecucion_pkey PRIMARY KEY (ejecucion)
);

CREATE TABLE IF NOT EXISTS public.area
(
    id integer NOT NULL DEFAULT nextval('area_id_seq'::regclass),
    area character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT area_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.banco
(
    id integer NOT NULL,
    denominacion character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(100) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT banco_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.beneficiario
(
    id integer NOT NULL DEFAULT nextval('beneficiario_id_seq'::regclass),
    persona character varying(1) COLLATE pg_catalog."default" NOT NULL,
    documento character varying(20) COLLATE pg_catalog."default" NOT NULL,
    beneficiario character varying(200) COLLATE pg_catalog."default" NOT NULL,
    residencia character varying(1) COLLATE pg_catalog."default" NOT NULL,
    tipo character varying(1) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(200) COLLATE pg_catalog."default",
    telefonos character varying(50) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    cedula_representante character varying(15) COLLATE pg_catalog."default",
    nombre_representante character varying(100) COLLATE pg_catalog."default",
    telefono_representante character varying(50) COLLATE pg_catalog."default",
    email_representante character varying(50) COLLATE pg_catalog."default",
    ctacontable character varying(50) COLLATE pg_catalog."default",
    banco integer,
    ctabeneficiario character varying(20) COLLATE pg_catalog."default",
    rif character varying(20) COLLATE pg_catalog."default",
    tipocontribuyente character(1) COLLATE pg_catalog."default",
    bancorep integer,
    cuentarep character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT beneficiario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.bienesservicios
(
    id integer NOT NULL DEFAULT nextval('bienesservicios_id_seq'::regclass),
    meta integer NOT NULL,
    producto integer NOT NULL,
    cantidad numeric(20, 2) NOT NULL DEFAULT 0,
    precio numeric(20, 2) NOT NULL DEFAULT 0,
    trimestre1 numeric(5, 2) NOT NULL DEFAULT 0,
    trimestre2 numeric(5, 2) NOT NULL DEFAULT 0,
    trimestre3 numeric(5, 2) NOT NULL DEFAULT 0,
    trimestre4 numeric(5, 2) NOT NULL DEFAULT 0,
    iva character(2) COLLATE pg_catalog."default",
    montoiva numeric(20, 2) NOT NULL DEFAULT 0,
    montobase numeric(20, 2) NOT NULL DEFAULT 0,
    cuenta character varying(13) COLLATE pg_catalog."default",
    nproducto character varying(200) COLLATE pg_catalog."default",
    financiamiento integer,
    umedida integer,
    CONSTRAINT bienesservicios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.bos
(
    id integer NOT NULL DEFAULT nextval('bos_id_seq'::regclass),
    segmento integer NOT NULL,
    familia integer NOT NULL,
    clase integer NOT NULL,
    producto integer NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    cp character(13) COLLATE pg_catalog."default" NOT NULL,
    tipo character(1) COLLATE pg_catalog."default",
    umedida integer,
    CONSTRAINT bos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.camposadicionales
(
    id integer NOT NULL DEFAULT nextval('camposadicionales_id_seq'::regclass),
    institucion integer,
    denominacion character varying(100) COLLATE pg_catalog."default",
    valor character varying(20) COLLATE pg_catalog."default",
    tipovalor character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT camposadicionales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cargaecuentas
(
    id integer NOT NULL DEFAULT nextval('cargaecuentas_id_seq'::regclass),
    fechadesde date,
    fechahasta date,
    banco integer,
    cuenta integer,
    archivo character varying(200) COLLATE pg_catalog."default",
    institucion integer
);

CREATE TABLE IF NOT EXISTS public.cargaecuentasdetalle
(
    id integer NOT NULL DEFAULT nextval('cargaecuentasdetalle_id_seq'::regclass),
    cargacuenta integer,
    fecha date,
    tipomovimiento integer,
    descripcion character varying(150) COLLATE pg_catalog."default",
    acredita numeric(20, 2),
    debita numeric(20, 2),
    referencia character varying(30) COLLATE pg_catalog."default",
    beneficiario integer DEFAULT 0,
    status character varying(15) COLLATE pg_catalog."default" DEFAULT 'Transito'::character varying
);

CREATE TABLE IF NOT EXISTS public.cargo
(
    id integer NOT NULL DEFAULT nextval('cargo_id_seq'::regclass),
    categoriacargo integer,
    cargo character varying(50) COLLATE pg_catalog."default",
    codigo character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT cargo_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cargosinst
(
    id integer NOT NULL DEFAULT nextval('cargosinst_id_seq'::regclass),
    institucion integer,
    cargo character varying(70) COLLATE pg_catalog."default",
    categoriacargo integer,
    CONSTRAINT cargosinst_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cargosrrhh
(
    id integer NOT NULL,
    institucion integer NOT NULL,
    tipopersonal integer,
    cargo character varying(50) COLLATE pg_catalog."default",
    x character varying(10) COLLATE pg_catalog."default",
    y character varying(10) COLLATE pg_catalog."default",
    idua integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    status character varying(10) COLLATE pg_catalog."default",
    unidadadministrativa character varying(200) COLLATE pg_catalog."default",
    idcargo integer
);

CREATE TABLE IF NOT EXISTS public.cargosrrhhdetalle
(
    id integer NOT NULL DEFAULT nextval('cargosrrhhdetalle_id_seq'::regclass),
    cargosrrhh integer,
    tabuadorrrhh integer,
    salario numeric(20, 2)
);

CREATE TABLE IF NOT EXISTS public.cargostemporales
(
    id integer,
    unidad character varying(10) COLLATE pg_catalog."default",
    cargo character varying(200) COLLATE pg_catalog."default",
    cedula character varying(15) COLLATE pg_catalog."default",
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    tabulador character varying(100) COLLATE pg_catalog."default",
    status character varying(15) COLLATE pg_catalog."default",
    salariopre numeric(20, 2),
    primapre numeric(20, 2),
    genero character varying(10) COLLATE pg_catalog."default",
    nivel character varying(10) COLLATE pg_catalog."default",
    grado character varying(10) COLLATE pg_catalog."default",
    salarioreal numeric(20, 2),
    primareal numeric(20, 2),
    generoreal character varying(10) COLLATE pg_catalog."default",
    statusreal character varying(15) COLLATE pg_catalog."default",
    salarioestimado numeric(20, 2),
    primaestimado numeric(20, 2),
    generoestimado character varying(10) COLLATE pg_catalog."default",
    statusestimado character varying(15) COLLATE pg_catalog."default",
    codigocargo character varying(10) COLLATE pg_catalog."default",
    codigoclase character varying(10) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.categoriacargo
(
    id integer NOT NULL DEFAULT nextval('categoriacargo_id_seq'::regclass),
    categoriacargo character varying(50) COLLATE pg_catalog."default",
    codigo character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT categoriacargo_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categoriacargorrhh
(
    id integer NOT NULL DEFAULT nextval('categoriacargorrhh_id_seq'::regclass),
    institucion integer,
    categoria character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT categoriacargorrhh_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.causado
(
    id integer NOT NULL DEFAULT nextval('causado_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    fecha date NOT NULL,
    tipocausado smallint,
    numero integer NOT NULL,
    compromiso integer,
    beneficiario integer NOT NULL,
    concepto text COLLATE pg_catalog."default",
    montocausado numeric(20, 2) NOT NULL DEFAULT 0,
    montopagado numeric(20, 2) NOT NULL DEFAULT 0,
    anulacion date,
    status character varying(1) COLLATE pg_catalog."default" NOT NULL,
    usuario character varying(20) COLLATE pg_catalog."default",
    idpago integer DEFAULT 0,
    CONSTRAINT causado_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.causadodetalle
(
    id integer NOT NULL DEFAULT nextval('causadodetalle_id_seq'::regclass),
    causado integer NOT NULL,
    compromiso integer NOT NULL,
    compromisodetalle integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    ejecucion integer NOT NULL,
    montocauasado numeric(20, 2) NOT NULL DEFAULT 0,
    disponiblecausado numeric(20, 2) NOT NULL DEFAULT 0,
    nrocredito integer,
    montocausadocredito numeric(20, 2) DEFAULT 0,
    disponiblecauasadocredito numeric(20, 2) DEFAULT 0,
    montopagado numeric(20, 2) NOT NULL DEFAULT 0,
    montopagadocredito numeric(20, 2) DEFAULT 0,
    fecha date,
    CONSTRAINT causadodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chequeras
(
    id integer NOT NULL DEFAULT nextval('chequeras_id_seq'::regclass),
    banco integer,
    cuenta integer,
    fecha date,
    chequedesde integer,
    chequehasta integer,
    chequeconsumido integer,
    institucion integer,
    CONSTRAINT chequeras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cheques
(
    id integer NOT NULL DEFAULT nextval('cheques_id_seq'::regclass),
    banco integer,
    cuenta integer,
    chequera integer,
    cheque integer,
    fecha date,
    beneficiario integer,
    montocheque numeric(20, 2),
    anulacion date,
    ordenpago character varying(100) COLLATE pg_catalog."default",
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    concepto character varying(500) COLLATE pg_catalog."default",
    tipo character varying(1) COLLATE pg_catalog."default",
    bancodestino integer,
    cuentadestino integer,
    referenciadestino character varying(20) COLLATE pg_catalog."default",
    disponible numeric(20, 2),
    egreso integer,
    montoorden numeric(20, 2) DEFAULT 0,
    motivo character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT cheques_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chequesordenes
(
    id integer NOT NULL DEFAULT nextval('chequesordenes_id_seq'::regclass),
    ordenpago integer,
    cheque integer,
    montocheque numeric(20, 2),
    CONSTRAINT chequesordenes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clase
(
    codigo integer NOT NULL,
    familia integer NOT NULL,
    clase character(200) COLLATE pg_catalog."default",
    CONSTRAINT clase_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.clasificadorpresupuestario
(
    cuenta character varying(13) COLLATE pg_catalog."default" NOT NULL,
    denominacion character varying(200) COLLATE pg_catalog."default" NOT NULL,
    nivel character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 4,
    tipo character varying(1) COLLATE pg_catalog."default",
    inversion character varying(1) COLLATE pg_catalog."default",
    caif character varying(20) COLLATE pg_catalog."default",
    ordinal character varying(4) COLLATE pg_catalog."default" NOT NULL DEFAULT '.'::character varying,
    CONSTRAINT clasificadorpresupuestario_pkey PRIMARY KEY (cuenta, ordinal)
);

CREATE TABLE IF NOT EXISTS public.compras
(
    id integer NOT NULL DEFAULT nextval('compras_id_seq'::regclass),
    pfiscal character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    uso text COLLATE pg_catalog."default" NOT NULL,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    cotizacion integer NOT NULL,
    sgp integer NOT NULL,
    fecha date NOT NULL,
    ncompromiso integer DEFAULT 0,
    proveedor integer NOT NULL,
    tiempoentrega integer,
    formapago integer,
    base numeric(20, 2) NOT NULL DEFAULT 0,
    iva numeric(20, 2) NOT NULL DEFAULT 0,
    total numeric(20, 2) NOT NULL DEFAULT 0,
    error text COLLATE pg_catalog."default",
    tiposgp integer,
    movimientos integer NOT NULL DEFAULT 0,
    anulacion date,
    status character(2) COLLATE pg_catalog."default" DEFAULT 'EP'::character varying,
    tipo character varying(1) COLLATE pg_catalog."default",
    numero integer DEFAULT 0,
    CONSTRAINT compras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comprascp
(
    id integer NOT NULL DEFAULT nextval('comprascp_id_seq'::regclass),
    compras integer NOT NULL,
    pfiscal character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    disponible numeric(20, 2) NOT NULL DEFAULT 0,
    monto numeric(20, 2) NOT NULL DEFAULT 0,
    ejecucion integer NOT NULL,
    ncreditoa character(30) COLLATE pg_catalog."default",
    montocreditoa numeric(20, 2) DEFAULT 0,
    cp character varying(13) COLLATE pg_catalog."default",
    fecha date,
    CONSTRAINT comprascp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comprascreditoa
(
    id integer NOT NULL DEFAULT nextval('comprascreditoa_id_seq'::regclass),
    compras integer NOT NULL,
    comprascp integer NOT NULL,
    ejecucion integer NOT NULL,
    ncreditoa character(30) COLLATE pg_catalog."default" NOT NULL,
    disponiblecreditoa numeric(20, 2) NOT NULL DEFAULT 0,
    montocreditoa numeric(20, 2) NOT NULL DEFAULT 0,
    CONSTRAINT pk_comprascreditoa PRIMARY KEY (compras, comprascp, ncreditoa)
);

CREATE TABLE IF NOT EXISTS public.comprasdetalle
(
    id integer NOT NULL DEFAULT nextval('comprasdetalle_id_seq'::regclass),
    compras integer NOT NULL,
    bos integer NOT NULL,
    cantidad integer NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    precio numeric(20, 2) NOT NULL DEFAULT 0,
    total numeric(20, 2) NOT NULL DEFAULT 0,
    iva numeric(20, 2) NOT NULL DEFAULT 0,
    general numeric(20, 2) NOT NULL DEFAULT 0,
    umedida integer,
    CONSTRAINT comprasdetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comprobantes
(
    id integer NOT NULL DEFAULT nextval('comprobantes_id_seq'::regclass),
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    fecha date NOT NULL,
    tipo integer NOT NULL,
    correlativo character(14) COLLATE pg_catalog."default" NOT NULL,
    proveedor integer NOT NULL,
    ordenpago integer NOT NULL,
    factura integer,
    anulacion date,
    CONSTRAINT pk_comprobantes PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.compromisoayuda
(
    id integer NOT NULL DEFAULT nextval('compromisoayuda_id_seq'::regclass),
    compromiso integer,
    beneficiario integer,
    banco integer,
    cuentabancaria character varying(20) COLLATE pg_catalog."default",
    monto numeric(20, 2),
    institucion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    tipocuenta character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT compromisoayuda_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.compromisodetalle
(
    id integer NOT NULL DEFAULT nextval('compromisodetalle_id_seq'::regclass),
    compromiso integer NOT NULL,
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    obra integer,
    monto numeric(24, 8) NOT NULL DEFAULT 0,
    ejecucion integer NOT NULL,
    disponible numeric(24, 8) NOT NULL DEFAULT 0,
    ncredito integer,
    montocredito numeric(24, 8),
    disponiblecredito numeric(24, 8),
    causado numeric(24, 8) DEFAULT 0,
    aumento numeric(24, 8) DEFAULT 0,
    disminuye numeric(24, 8) DEFAULT 0,
    iddetallecompromiso integer,
    causadocredito numeric(24, 8) DEFAULT 0,
    pagado numeric(24, 8) DEFAULT 0,
    CONSTRAINT compromisodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.compromisos
(
    id integer NOT NULL DEFAULT nextval('compromisos_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    fecha date NOT NULL,
    tipocompromiso integer,
    ncompromiso integer,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    beneficiario integer,
    obra integer,
    montocompromiso numeric(24, 8) NOT NULL DEFAULT 0,
    status character varying(1) COLLATE pg_catalog."default" DEFAULT 1,
    numero character varying(20) COLLATE pg_catalog."default",
    anulacion date,
    causado numeric(24, 8) DEFAULT 0,
    tipo smallint,
    aumento numeric(24, 8) DEFAULT 0,
    disminuye numeric(24, 8) DEFAULT 0,
    tipoad character varying(1) COLLATE pg_catalog."default",
    pagado numeric(24, 8) DEFAULT 0,
    usuario character varying(70) COLLATE pg_catalog."default",
    nomina integer DEFAULT 0,
    compras integer DEFAULT 0,
    ayuda integer DEFAULT 0,
    CONSTRAINT compromisos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.conceptos
(
    id integer NOT NULL DEFAULT nextval('conceptos_id_seq'::regclass),
    institucion integer,
    tipoconcepto character varying(1) COLLATE pg_catalog."default",
    codigo integer,
    concepto character varying(100) COLLATE pg_catalog."default",
    formula text COLLATE pg_catalog."default",
    tipopersonal character varying(400) COLLATE pg_catalog."default",
    unidadadm integer,
    status character varying(1) COLLATE pg_catalog."default",
    frecuencianomina character varying(400) COLLATE pg_catalog."default",
    clasificador character varying(13) COLLATE pg_catalog."default",
    utilidades character varying(1) COLLATE pg_catalog."default",
    vacaciones character varying(1) COLLATE pg_catalog."default",
    prestaciones character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT conceptos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.conciliacion
(
    id integer NOT NULL DEFAULT nextval('conciliacion_id_seq'::regclass),
    institucion integer NOT NULL,
    banco integer NOT NULL,
    cuenta integer NOT NULL,
    fechadesde date NOT NULL,
    fechahasta date NOT NULL,
    saldoantlib numeric(20, 2) NOT NULL DEFAULT 0,
    ndepconclib integer NOT NULL DEFAULT 0,
    mdepconclib numeric(20, 2) NOT NULL DEFAULT 0,
    ncheconclib integer NOT NULL DEFAULT 0,
    mcheconclib numeric(20, 2) NOT NULL DEFAULT 0,
    ncreconclib integer NOT NULL DEFAULT 0,
    mcreconclib numeric(20, 2) NOT NULL DEFAULT 0,
    ndebconclib integer NOT NULL DEFAULT 0,
    mdebconclib numeric(20, 2) NOT NULL DEFAULT 0,
    ndeptranlib integer NOT NULL DEFAULT 0,
    mdeptranlib numeric(20, 2) NOT NULL DEFAULT 0,
    nchetranlib integer NOT NULL DEFAULT 0,
    mchetranlib numeric(20, 2) NOT NULL DEFAULT 0,
    ncretranlib integer NOT NULL DEFAULT 0,
    mcretranlib numeric(20, 2) NOT NULL DEFAULT 0,
    ndebtranlib integer NOT NULL DEFAULT 0,
    mdebtranlib numeric(20, 2) NOT NULL DEFAULT 0,
    saldoactlib integer NOT NULL DEFAULT 0,
    saldoantban numeric(20, 2) NOT NULL DEFAULT 0,
    ndepconcban integer NOT NULL DEFAULT 0,
    mdepconcban numeric(20, 2) NOT NULL DEFAULT 0,
    ncheconcban integer NOT NULL DEFAULT 0,
    mcheconcban numeric(20, 2) NOT NULL DEFAULT 0,
    ncreconcban integer NOT NULL DEFAULT 0,
    mcreconcban numeric(20, 2) NOT NULL DEFAULT 0,
    ndebconcban integer NOT NULL DEFAULT 0,
    mdebconcban numeric(20, 2) NOT NULL DEFAULT 0,
    ndeptranban integer NOT NULL DEFAULT 0,
    mdeptranban numeric(20, 2) NOT NULL DEFAULT 0,
    nchetranban integer NOT NULL DEFAULT 0,
    mchetranban numeric(20, 2) NOT NULL DEFAULT 0,
    ncretranban integer NOT NULL DEFAULT 0,
    mcretranban numeric(20, 2) NOT NULL DEFAULT 0,
    ndebtranban integer NOT NULL DEFAULT 0,
    mdebtranban numeric(20, 2) NOT NULL DEFAULT 0,
    saldoactban numeric(20, 2) NOT NULL DEFAULT 0,
    status integer NOT NULL DEFAULT 0,
    totcredlib numeric(20, 2) DEFAULT 0,
    totdeblib numeric(20, 2) DEFAULT 0,
    totcreban numeric(20, 2) DEFAULT 0,
    totdebban numeric(20, 2) DEFAULT 0,
    CONSTRAINT conciliacion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.conciliaciondetalle
(
    id integer NOT NULL DEFAULT nextval('conciliaciondetalle_id_seq'::regclass),
    conciliacion integer NOT NULL,
    fecha date,
    tipomovimiento integer NOT NULL,
    referencia character varying(20) COLLATE pg_catalog."default",
    beneficiario integer,
    descripcion character varying(150) COLLATE pg_catalog."default",
    acredita numeric(20, 2) DEFAULT 0,
    debita numeric(20, 2) DEFAULT 0,
    idlibro integer,
    idbanco integer,
    status character varying(20) COLLATE pg_catalog."default",
    statusoriginal character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT conciliaciondetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.constanciatrabajo
(
    id integer NOT NULL DEFAULT nextval('constanciatrabajo_id_seq'::regclass),
    institucion integer,
    tipopersonal integer,
    fichapersonal integer,
    unidadadministrativa character varying(200) COLLATE pg_catalog."default",
    cargo character varying(100) COLLATE pg_catalog."default",
    grado character varying(20) COLLATE pg_catalog."default",
    nivel character varying(20) COLLATE pg_catalog."default",
    constancia text COLLATE pg_catalog."default",
    fecha date,
    status character varying(1) COLLATE pg_catalog."default",
    plantilla integer,
    salariototal numeric(20, 2) DEFAULT 0,
    CONSTRAINT constanciatrabajo_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.constanciatrabajodetalle
(
    id integer NOT NULL DEFAULT nextval('constanciatrabajodetalle_id_seq'::regclass),
    constanciatrabajo integer,
    concepto integer,
    monto numeric(20, 2),
    CONSTRAINT constanciatrabajodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacion
(
    id integer NOT NULL DEFAULT nextval('contratacion_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    fecha date,
    dp integer,
    motivo text COLLATE pg_catalog."default",
    codigo integer,
    tipo integer,
    tipocontratacion integer,
    generar integer,
    status character varying(1) COLLATE pg_catalog."default",
    fdesde date,
    fhasta date,
    anulacion date,
    contrato integer,
    fechacontrato date,
    objeto character varying(300) COLLATE pg_catalog."default",
    ncontratacion character varying(20) COLLATE pg_catalog."default",
    decreto character varying(50) COLLATE pg_catalog."default",
    fdecreto date,
    gaceta character varying(50) COLLATE pg_catalog."default",
    fgaceta date,
    ordencompromiso character varying(50) COLLATE pg_catalog."default",
    fechaorden date,
    CONSTRAINT contratacion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacionbosgeneral
(
    id integer NOT NULL DEFAULT nextval('contratacionbosgeneral_id_seq'::regclass),
    contratacionempresas integer,
    bos integer,
    umedida integer,
    cantidad numeric(10, 0),
    precio numeric(20, 2) DEFAULT 0,
    subtotal numeric(20, 2) DEFAULT 0,
    poriva numeric(6, 2) DEFAULT 16.00,
    montoiva numeric(20, 2) DEFAULT 0,
    total numeric(20, 2) DEFAULT 0,
    seleccion character varying(1) COLLATE pg_catalog."default",
    descripcion text COLLATE pg_catalog."default",
    obra integer,
    CONSTRAINT contrataciongeneral_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacionbosprov
(
    id integer NOT NULL DEFAULT nextval('contratacionbosprov_id_seq'::regclass),
    contratacionempresas integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    dp integer,
    poa integer,
    meta integer,
    financiamiento integer,
    cp character varying(13) COLLATE pg_catalog."default",
    beneficiario integer,
    sgp integer,
    bos integer,
    umedida integer,
    cantidad numeric(10, 0),
    precio numeric(20, 2) DEFAULT 0,
    subtotal numeric(20, 2) DEFAULT 0,
    poriva numeric(6, 2) DEFAULT 0,
    montoiva numeric(20, 2) DEFAULT 0,
    total numeric(20, 2) DEFAULT 0,
    descripcion text COLLATE pg_catalog."default",
    obra integer,
    CONSTRAINT contratacionbosprov_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacionempresas
(
    id integer NOT NULL DEFAULT nextval('contratacionempresas_id_seq'::regclass),
    contratacion integer,
    beneficiario integer,
    montobase numeric(20, 2),
    montoiva numeric(20, 2),
    montototal numeric(20, 2),
    status character varying(1) COLLATE pg_catalog."default",
    observacion text COLLATE pg_catalog."default",
    evaluacion integer,
    CONSTRAINT contratacionempresas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacionevaluacion
(
    id integer NOT NULL DEFAULT nextval('contratacionevaluacion_id_seq'::regclass),
    contratacion integer,
    proveedor1 integer,
    proveedor2 integer,
    proveedor3 integer,
    proveedor4 integer,
    criterio integer,
    valor1 integer,
    valor2 integer,
    valor3 integer,
    valor4 integer,
    CONSTRAINT contratacionevaluacion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.contratacionsgp
(
    id integer NOT NULL DEFAULT nextval('contratacionsgp_id_seq'::regclass),
    contratacion integer,
    sgp integer,
    institucion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    dp integer,
    CONSTRAINT contratacionsgp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.correlativoretencion
(
    id integer NOT NULL DEFAULT nextval('correlativoretencion_id_seq'::regclass),
    institucion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    iva integer DEFAULT 0,
    islr integer DEFAULT 0,
    timbre integer DEFAULT 0,
    mes character varying(2) COLLATE pg_catalog."default",
    municipal integer DEFAULT 0,
    social integer DEFAULT 0,
    CONSTRAINT correlativoretencion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacion
(
    id integer NOT NULL DEFAULT nextval('cotizacion_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    fecha date NOT NULL,
    numeroi integer,
    sgp integer NOT NULL,
    tiposgp integer NOT NULL,
    fechasgp date,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    criterio1 integer NOT NULL DEFAULT 0,
    criterio2 integer NOT NULL DEFAULT 0,
    criterio3 integer NOT NULL DEFAULT 0,
    criterio4 integer NOT NULL DEFAULT 0,
    criterio5 integer NOT NULL DEFAULT 0,
    criterio6 character(150) COLLATE pg_catalog."default",
    observacion text COLLATE pg_catalog."default",
    comprador character(100) COLLATE pg_catalog."default",
    conformado character(100) COLLATE pg_catalog."default",
    ncompra integer,
    nservicio integer,
    anulacion date,
    status character varying(2) COLLATE pg_catalog."default",
    CONSTRAINT cotizacion_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacionbos
(
    id integer NOT NULL DEFAULT nextval('cotizacionbos_id_seq'::regclass),
    cotizacionp integer NOT NULL,
    bos integer NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    cantidad numeric(10, 0) NOT NULL DEFAULT 0,
    precio numeric(20, 2) NOT NULL DEFAULT 0,
    total numeric(20, 2) NOT NULL DEFAULT 0,
    iva numeric(20, 2) NOT NULL DEFAULT 0,
    general numeric(20, 2) NOT NULL DEFAULT 0,
    observacion character(50) COLLATE pg_catalog."default",
    seleccion smallint NOT NULL DEFAULT 0,
    institucion integer NOT NULL,
    pfiscal character varying(5) COLLATE pg_catalog."default" NOT NULL,
    dp integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default",
    poa integer,
    CONSTRAINT pk_cotizacionbos PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizaciondetalle
(
    id integer NOT NULL DEFAULT nextval('cotizaciondetalle_id_seq'::regclass),
    cotizacionp integer NOT NULL,
    bos integer NOT NULL,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    cantidad integer NOT NULL,
    preciou numeric(20, 2) NOT NULL,
    total numeric(20, 2) NOT NULL,
    iva numeric(20, 2) NOT NULL,
    general numeric(20, 2) NOT NULL,
    CONSTRAINT pk_cotizaciondetalle PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacionp
(
    id integer NOT NULL DEFAULT nextval('cotizacionp_id_seq'::regclass),
    cotizacion integer NOT NULL,
    proveedor integer NOT NULL,
    CONSTRAINT pk_cotizacionp PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacionproveedor
(
    id integer NOT NULL DEFAULT nextval('cotizacionproveedor_id_seq'::regclass),
    cotizacion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    proveedor integer,
    seleccionado character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT cotizacionproveedor_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacionproveedordetalle
(
    id integer NOT NULL DEFAULT nextval('cotizacionproveedordetalle_id_seq'::regclass),
    cotizacion integer NOT NULL,
    ejercicio character(4) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default",
    financiamiento integer NOT NULL,
    obra integer,
    codigoproducto integer,
    producto character varying(250) COLLATE pg_catalog."default",
    cantidad numeric(10, 2),
    monto numeric(20, 2),
    disponibilidad numeric(20, 2),
    ejecucion integer NOT NULL,
    idrequisicion integer,
    seleccionado character varying(1) COLLATE pg_catalog."default",
    proveedor1 integer,
    proveedor2 integer,
    proveedor3 integer,
    proveedor4 integer,
    proveedor5 integer,
    cantidad1 numeric(6, 2),
    cantidad2 numeric(6, 2),
    cantidad3 numeric(6, 2),
    cantidad4 numeric(6, 2),
    cantidad5 numeric(6, 2),
    precio1 numeric(10, 2),
    precio2 numeric(10, 2),
    precio3 numeric(10, 2),
    precio4 numeric(10, 2),
    precio5 numeric(10, 2),
    seleccion1 character varying(1) COLLATE pg_catalog."default",
    seleccion2 character varying(1) COLLATE pg_catalog."default",
    seleccion3 character varying(1) COLLATE pg_catalog."default",
    seleccion4 character varying(1) COLLATE pg_catalog."default",
    seleccion5 character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT cotizacionproveedordetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cotizacionrequisicion
(
    id integer NOT NULL DEFAULT nextval('cotizacionrequisicion_id_seq'::regclass),
    cotizacion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    requisicion integer,
    CONSTRAINT cotizacionrequisicion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.creditosadicionales
(
    id integer NOT NULL DEFAULT nextval('creditosadicionales_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    ejecucion integer NOT NULL,
    numerocredito character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fechacredito date NOT NULL,
    montocredito numeric(20, 2) NOT NULL DEFAULT 0,
    comprometidocredito numeric(20, 2) NOT NULL DEFAULT 0,
    causadocredito numeric(20, 2) NOT NULL DEFAULT 0,
    pagadocredito numeric(20, 2) NOT NULL DEFAULT 0,
    modificaciondetalle integer,
    CONSTRAINT creditosadicionales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.criterios
(
    id integer NOT NULL DEFAULT nextval('criterios_id_seq'::regclass),
    institucion integer,
    tipo character varying(1) COLLATE pg_catalog."default",
    criterio character varying(100) COLLATE pg_catalog."default",
    valordesde integer,
    valorhasta integer,
    orden bigint
);

CREATE TABLE IF NOT EXISTS public.cuenta
(
    id integer NOT NULL DEFAULT nextval('cuenta_id_seq'::regclass),
    banco integer,
    cuenta character varying(20) COLLATE pg_catalog."default",
    descripcion character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT cuenta_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cuenta1
(
    codigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    producto character varying(200) COLLATE pg_catalog."default",
    cuenta character varying(13) COLLATE pg_catalog."default",
    CONSTRAINT cuenta1_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.cuenta2
(
    codigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    producto character varying(200) COLLATE pg_catalog."default",
    cuenta character varying(13) COLLATE pg_catalog."default",
    CONSTRAINT cuenta2_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.cuenta3
(
    codigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    producto character varying(200) COLLATE pg_catalog."default",
    cuenta character varying(13) COLLATE pg_catalog."default",
    CONSTRAINT cuenta3_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.cuenta4
(
    codigo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    producto character varying(200) COLLATE pg_catalog."default",
    cuenta character varying(13) COLLATE pg_catalog."default",
    CONSTRAINT cuenta4_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.cuentasbancarias
(
    id integer NOT NULL,
    banco integer NOT NULL,
    cuenta character varying(30) COLLATE pg_catalog."default" NOT NULL,
    fechaapertura date NOT NULL,
    montoapertura numeric(20, 2) NOT NULL DEFAULT 0,
    montoacredita numeric(20, 2) NOT NULL DEFAULT 0,
    montodebita numeric(20, 2) NOT NULL DEFAULT 0,
    montosaldo numeric(20, 2) NOT NULL DEFAULT 0,
    descripcion character varying(50) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT cuentasbancarias_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.deduccioncuota
(
    id integer NOT NULL DEFAULT nextval('deduccioncuota_id_seq'::regclass),
    fichapersonal integer,
    monto numeric(20, 2),
    nrocuotas integer,
    fechadesde date,
    descuento numeric(20, 2),
    status character varying(1) COLLATE pg_catalog."default",
    fechahasta date,
    beneficiario integer,
    cuota numeric(20, 2),
    CONSTRAINT deduccioncuota_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.depositos
(
    id integer NOT NULL DEFAULT nextval('depositos_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    fecha date,
    banco integer,
    cuenta integer,
    referencia character varying(20) COLLATE pg_catalog."default",
    descripcion character varying(300) COLLATE pg_catalog."default" NOT NULL,
    monto numeric(20, 2) DEFAULT 0,
    disponible numeric(20, 2) DEFAULT 0,
    beneficiario integer
);

CREATE TABLE IF NOT EXISTS public.documentos
(
    id integer NOT NULL DEFAULT nextval('documentos_id_seq'::regclass),
    institucion integer,
    tiponomina integer,
    documento text COLLATE pg_catalog."default",
    conceptos text COLLATE pg_catalog."default",
    variables text COLLATE pg_catalog."default",
    logo character varying(100) COLLATE pg_catalog."default",
    titulo character varying(100) COLLATE pg_catalog."default",
    texto text COLLATE pg_catalog."default",
    CONSTRAINT documentos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ecuentas
(
    id integer NOT NULL DEFAULT nextval('ecuentas_id_seq'::regclass),
    institucion integer,
    banco integer,
    cuenta integer,
    fecha date,
    referencia character varying(20) COLLATE pg_catalog."default" NOT NULL,
    beneficiario integer NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    debito numeric(20, 2) DEFAULT 0,
    credito numeric(20, 2),
    saldo numeric(20, 2),
    fechadesde date,
    fechahasta date,
    usuario character varying(20) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.ejecucion
(
    id integer NOT NULL DEFAULT nextval('ejecucion_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    meta integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default" NOT NULL,
    financiamiento integer NOT NULL,
    monto_inicial numeric(24, 8) NOT NULL DEFAULT 0,
    monto_aumento numeric(24, 8) NOT NULL DEFAULT 0,
    monto_disminuye numeric(24, 8) NOT NULL DEFAULT 0,
    monto_actualizado numeric(24, 8) NOT NULL DEFAULT 0,
    monto_precomprometido numeric(24, 8) NOT NULL DEFAULT 0,
    monto_comprometido numeric(24, 8) NOT NULL DEFAULT 0,
    monto_causado numeric(24, 8) NOT NULL DEFAULT 0,
    monto_pagado numeric(24, 8) NOT NULL DEFAULT 0,
    monto_porcomprometer numeric(24, 8) NOT NULL DEFAULT 0,
    monto_porcausar numeric(24, 8) NOT NULL DEFAULT 0,
    monto_porpagar numeric(24, 8) NOT NULL DEFAULT 0,
    poa integer,
    CONSTRAINT ejecucion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ejecucionobras
(
    id integer NOT NULL DEFAULT nextval('ejecucionobras_id_seq'::regclass),
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    unidadadministrativa integer NOT NULL,
    meta integer NOT NULL,
    cuenta character varying(13) COLLATE pg_catalog."default" NOT NULL,
    financiamiento integer NOT NULL,
    codigo character varying(15) COLLATE pg_catalog."default" NOT NULL,
    denominacion character varying(200) COLLATE pg_catalog."default" NOT NULL,
    tipoinfraestructura integer NOT NULL,
    sector integer NOT NULL,
    monto_inicial numeric(20, 2) NOT NULL DEFAULT 0,
    monto_aumento numeric(20, 2) NOT NULL DEFAULT 0,
    monto_disminuye numeric(20, 2) NOT NULL DEFAULT 0,
    monto_actualizado numeric(20, 2) NOT NULL DEFAULT 0,
    monto_precomprometido numeric(20, 2) NOT NULL DEFAULT 0,
    monto_comprometido numeric(20, 2) NOT NULL DEFAULT 0,
    monto_causado numeric(20, 2) NOT NULL DEFAULT 0,
    monto_pagado numeric(20, 2) NOT NULL DEFAULT 0,
    monto_porcomprometer numeric(20, 2) NOT NULL DEFAULT 0,
    monto_porcausar numeric(20, 2) NOT NULL DEFAULT 0,
    monto_porpagar numeric(20, 2) NOT NULL DEFAULT 0,
    CONSTRAINT ejecucionobras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ejecucionpresupuestaria
(
    id integer NOT NULL DEFAULT nextval('ejecucionpresupuestaria_id_seq'::regclass),
    fechah date,
    ejecucion integer NOT NULL,
    pfiscal character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    sector character(2) COLLATE pg_catalog."default" NOT NULL,
    programa character(2) COLLATE pg_catalog."default" NOT NULL,
    sprograma character(2) COLLATE pg_catalog."default" NOT NULL,
    proyecto character(2) COLLATE pg_catalog."default" NOT NULL,
    actividad character(2) COLLATE pg_catalog."default" NOT NULL,
    cuenta character(13) COLLATE pg_catalog."default" NOT NULL,
    financiamiento integer,
    inicial numeric(20, 2) NOT NULL DEFAULT 0,
    aumentos numeric(20, 2) NOT NULL DEFAULT 0,
    disminuciones numeric(20, 2) NOT NULL DEFAULT 0,
    compromisos numeric(20, 2) NOT NULL DEFAULT 0,
    causados numeric(20, 2) NOT NULL DEFAULT 0,
    pagados numeric(20, 2) NOT NULL DEFAULT 0,
    logins character(20) COLLATE pg_catalog."default",
    uejecutora character varying(200) COLLATE pg_catalog."default",
    nivel character(2) COLLATE pg_catalog."default",
    CONSTRAINT ejecucionpresupuestaria_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ejercicio
(
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    status character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    reconducido character varying(2) COLLATE pg_catalog."default",
    ejercicioorigen character varying(5) COLLATE pg_catalog."default",
    id integer NOT NULL DEFAULT nextval('ejercicio_id_seq'::regclass),
    rcompras integer DEFAULT 0,
    rservicios integer DEFAULT 0,
    rsuministro integer DEFAULT 0,
    cotizacion integer DEFAULT 0,
    ordencompras integer DEFAULT 0,
    ordenserivio integer DEFAULT 0,
    solicitudpago integer DEFAULT 0,
    ordenpago integer DEFAULT 0,
    egreso integer DEFAULT 0,
    statuspresupuestario integer DEFAULT 0,
    ejercicioejecucion character varying(4) COLLATE pg_catalog."default",
    compromiso integer NOT NULL DEFAULT 0,
    institucion integer DEFAULT 13,
    reconversion integer DEFAULT 0,
    CONSTRAINT ejercicio_pkey PRIMARY KEY (ejercicio)
);

CREATE TABLE IF NOT EXISTS public.errordisponibilidad
(
    id integer NOT NULL DEFAULT nextval('errordisponibilidad_id_seq'::regclass),
    orden integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    dp integer,
    poa integer,
    meta integer,
    cp character varying(13) COLLATE pg_catalog."default",
    financiamiento integer,
    disponible numeric(20, 2),
    monto numeric(20, 2)
);

CREATE TABLE IF NOT EXISTS public.errornomina
(
    id integer NOT NULL DEFAULT nextval('errornomina_id_seq'::regclass),
    nominapago integer,
    dp integer,
    poa integer,
    meta integer,
    cp character varying(13) COLLATE pg_catalog."default",
    monto numeric(20, 2),
    disponible numeric(20, 2),
    observacion character varying(50) COLLATE pg_catalog."default",
    ejecucion integer
);

CREATE TABLE IF NOT EXISTS public.estado
(
    id integer NOT NULL DEFAULT nextval('estado_id_seq'::regclass),
    estado character varying(50) COLLATE pg_catalog."default" NOT NULL,
    codigoonapre character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT estado_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.familia
(
    codigo integer NOT NULL,
    segmento integer NOT NULL,
    familia character(200) COLLATE pg_catalog."default",
    CONSTRAINT familia_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.fichapersonal
(
    id integer NOT NULL DEFAULT nextval('fichapersonal_id_seq'::regclass),
    institucion integer NOT NULL,
    tiponomina integer NOT NULL,
    funcionario integer NOT NULL,
    cargo character varying(50) COLLATE pg_catalog."default",
    x character varying(10) COLLATE pg_catalog."default",
    y character varying(10) COLLATE pg_catalog."default",
    salario numeric(20, 2) NOT NULL,
    fechaingreso date NOT NULL,
    fechaegreso date,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    banconomina integer,
    cuentanomina character varying(20) COLLATE pg_catalog."default",
    bancofideicomiso integer,
    cuentafideicomiso character varying(20) COLLATE pg_catalog."default",
    sso character varying(1) COLLATE pg_catalog."default",
    faov character varying(1) COLLATE pg_catalog."default",
    fondopj character varying(1) COLLATE pg_catalog."default",
    regimenpf character varying(1) COLLATE pg_catalog."default",
    ince character varying(1) COLLATE pg_catalog."default",
    islr character varying(1) COLLATE pg_catalog."default",
    cajaahorros character varying(1) COLLATE pg_catalog."default",
    sindicato character varying(1) COLLATE pg_catalog."default",
    situacion integer NOT NULL,
    idcargo integer,
    idtabulador integer,
    unidadadministrativa character varying(200) COLLATE pg_catalog."default",
    fotos character varying(100) COLLATE pg_catalog."default",
    porcentaje numeric(6, 2),
    salariojubilacion numeric(20, 2),
    fechajubilacion date,
    formapago character varying(1) COLLATE pg_catalog."default",
    tipocuentapago character varying(1) COLLATE pg_catalog."default",
    tipocuentafide character varying(1) COLLATE pg_catalog."default",
    fichajp integer DEFAULT 0,
    subtipopersonal integer DEFAULT 0,
    CONSTRAINT fichapersonal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fichapersonalcampoa
(
    id integer NOT NULL DEFAULT nextval('fichapersonalcampoa_id_seq'::regclass),
    fichapersonal integer,
    campoadicional integer,
    valor character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT fichapersonalcampoa_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fichapersonaltabulador
(
    id integer NOT NULL DEFAULT nextval('fichapersonaltabulador_id_seq'::regclass),
    fichapersonal integer,
    tabuladorrrhh integer,
    salario numeric(20, 2),
    fechavigencia date,
    cargo character varying(50) COLLATE pg_catalog."default",
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    x character varying(10) COLLATE pg_catalog."default",
    y character varying(10) COLLATE pg_catalog."default",
    unidadadministrativa character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT fichapersonaltabulador_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fichasubtipo
(
    ficha integer,
    tipo integer
);

CREATE TABLE IF NOT EXISTS public.financiamiento
(
    id integer NOT NULL DEFAULT nextval('financiamiento_id_seq'::regclass),
    financiamiento character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT financiamiento_pkey PRIMARY KEY (financiamiento)
);

CREATE TABLE IF NOT EXISTS public.firmas
(
    id integer NOT NULL DEFAULT nextval('firmas_institucion_seq'::regclass),
    modulo character varying(2) COLLATE pg_catalog."default",
    firma1 character varying(50) COLLATE pg_catalog."default",
    cargo1 character varying(50) COLLATE pg_catalog."default",
    firma2 character varying(50) COLLATE pg_catalog."default",
    cargo2 character varying(50) COLLATE pg_catalog."default",
    firma3 character varying(50) COLLATE pg_catalog."default",
    cargo3 character varying(50) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT firmas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.frecuencianomina
(
    id integer NOT NULL DEFAULT nextval('frecuencianomina_id_seq'::regclass),
    institucion integer,
    frecuencia character varying(100) COLLATE pg_catalog."default",
    diaspago integer,
    CONSTRAINT frecuencianomina_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.funcionario
(
    id integer NOT NULL DEFAULT nextval('funcionario_id_seq'::regclass),
    institucion integer NOT NULL,
    nacioanlidad character varying(1) COLLATE pg_catalog."default",
    documento integer,
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    fachanacimiento date,
    lnacimiento character varying(100) COLLATE pg_catalog."default",
    sexo character varying(1) COLLATE pg_catalog."default",
    estadocivil character varying(1) COLLATE pg_catalog."default",
    direccion character varying(200) COLLATE pg_catalog."default",
    telefonofijo character varying(15) COLLATE pg_catalog."default",
    telefomovil character varying(15) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    telefonocontacto character varying(15) COLLATE pg_catalog."default",
    personacontacto character varying(50) COLLATE pg_catalog."default",
    documentoconyugue integer,
    conyugue character varying(60) COLLATE pg_catalog."default",
    telefonoconyugue character varying(15) COLLATE pg_catalog."default",
    emailcontacto character varying(50) COLLATE pg_catalog."default",
    nacionalidadconyugue character varying COLLATE pg_catalog."default",
    hijos character varying(1) COLLATE pg_catalog."default",
    emailconyugue character varying(50) COLLATE pg_catalog."default",
    area character varying(100) COLLATE pg_catalog."default",
    rif character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT funcionario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.funcionarioestudios
(
    id integer NOT NULL DEFAULT nextval('funcionarioestudios_id_seq'::regclass),
    funcionario integer,
    grado character varying(2) COLLATE pg_catalog."default",
    institucion character varying(50) COLLATE pg_catalog."default",
    fechadesde date,
    fechahasta date,
    titulo character varying(70) COLLATE pg_catalog."default",
    CONSTRAINT funcionarioestudios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.funcionariohijos
(
    id integer NOT NULL DEFAULT nextval('funcionariohijos_id_seq'::regclass),
    funcionario integer,
    nacionalidad character varying(1) COLLATE pg_catalog."default",
    documento integer,
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    sexo character varying(1) COLLATE pg_catalog."default",
    fechanacimiento date,
    incapacidad character varying(100) COLLATE pg_catalog."default",
    tieneincapacidad character varying(1) COLLATE pg_catalog."default",
    actanacimiento character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT funcionariohijos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.funcionariolaboral
(
    id integer NOT NULL DEFAULT nextval('funcionariolaboral_id_seq'::regclass),
    funcionario integer,
    area character varying(1) COLLATE pg_catalog."default",
    institucion character varying(100) COLLATE pg_catalog."default",
    cargo character varying(50) COLLATE pg_catalog."default",
    desde date,
    hasta date,
    salario numeric(20, 2),
    documento character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT funcionariolaboral_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.funcnomina
(
    id integer NOT NULL DEFAULT nextval('funcnomina_id_seq'::regclass),
    institucion integer,
    funcion character varying(50) COLLATE pg_catalog."default",
    argumentos character varying(100) COLLATE pg_catalog."default",
    descripcion character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT funcnomina_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.gradostabulador
(
    id integer NOT NULL DEFAULT nextval('gradostabulador_id_seq'::regclass),
    tipotabulador integer NOT NULL,
    cargo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    grado character(10) COLLATE pg_catalog."default" NOT NULL,
    nivel character(10) COLLATE pg_catalog."default" NOT NULL,
    orden character(2) COLLATE pg_catalog."default",
    monto numeric(10, 2) NOT NULL DEFAULT 0,
    CONSTRAINT gradostabulador_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.grupo
(
    codigo character varying(2) COLLATE pg_catalog."default",
    grupo character varying(50) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.horas
(
    id integer NOT NULL DEFAULT nextval('horas_id_seq'::regclass),
    horas numeric(5, 2) NOT NULL DEFAULT 0,
    tipo character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT horas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.impuestos_islr
(
    id integer NOT NULL DEFAULT nextval('impuestos_islr_id_seq'::regclass),
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    tipo character(1) COLLATE pg_catalog."default" NOT NULL,
    "base imponible" numeric(3, 0),
    porcentaje numeric(6, 2),
    pagomayores numeric(10, 2),
    codigoxml character(3) COLLATE pg_catalog."default",
    CONSTRAINT impuestos_islr_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.indicadores
(
    id integer NOT NULL DEFAULT nextval('indicadores_id_seq'::regclass),
    meta integer NOT NULL,
    indicadores character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT indicadores_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ingresos
(
    id integer NOT NULL DEFAULT nextval('ingresos_id_seq'::regclass),
    institucion integer NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    ramo character varying(17) COLLATE pg_catalog."default" NOT NULL,
    ingresos numeric(20, 2) NOT NULL DEFAULT 0,
    enero numeric(20, 2) NOT NULL DEFAULT 0,
    febrero numeric(20, 2) NOT NULL DEFAULT 0,
    marzo numeric(20, 2) NOT NULL DEFAULT 0,
    abril numeric(20, 2) NOT NULL DEFAULT 0,
    mayo numeric(20, 2) NOT NULL DEFAULT 0,
    junio numeric(20, 2) NOT NULL DEFAULT 0,
    julio numeric(20, 2) NOT NULL DEFAULT 0,
    agosto numeric(20, 2) NOT NULL DEFAULT 0,
    septiembre numeric(20, 2) NOT NULL DEFAULT 0,
    octubre numeric(20, 2) NOT NULL DEFAULT 0,
    noviembre numeric(20, 2) NOT NULL DEFAULT 0,
    diciembre numeric(20, 2) NOT NULL DEFAULT 0,
    ordinal character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT ingresos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.institucion
(
    id integer NOT NULL DEFAULT nextval('institucion_id_seq'::regclass),
    rif character(20) COLLATE pg_catalog."default",
    institucion character varying(200) COLLATE pg_catalog."default" NOT NULL,
    direccion text COLLATE pg_catalog."default",
    telefonos character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    logo bytea,
    logo1 bytea,
    baselegal text COLLATE pg_catalog."default",
    web character varying(100) COLLATE pg_catalog."default",
    estado integer,
    municipio integer,
    codigo character varying(20) COLLATE pg_catalog."default",
    postal character varying(5) COLLATE pg_catalog."default",
    organigrama character varying(50) COLLATE pg_catalog."default",
    vision text COLLATE pg_catalog."default",
    mision text COLLATE pg_catalog."default",
    razonsocial character varying(100) COLLATE pg_catalog."default",
    formajuridica character varying(50) COLLATE pg_catalog."default",
    iniciooperaciones character varying(4) COLLATE pg_catalog."default",
    actividadprincipal text COLLATE pg_catalog."default",
    codigoadscrito integer,
    clase character varying COLLATE pg_catalog."default",
    instructivo character varying(2) COLLATE pg_catalog."default",
    codigopresupuestario character varying(20) COLLATE pg_catalog."default",
    fax character varying(100) COLLATE pg_catalog."default",
    ciudad character varying(50) COLLATE pg_catalog."default",
    egreso integer DEFAULT 0,
    ejercicio character varying(4) COLLATE pg_catalog."default",
    CONSTRAINT institucion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.meta
(
    id integer NOT NULL DEFAULT nextval('meta_id_seq'::regclass),
    poa integer NOT NULL,
    cantidad1 integer NOT NULL DEFAULT 0,
    cantidad2 integer NOT NULL DEFAULT 0,
    cantidad3 integer NOT NULL DEFAULT 0,
    cantidad4 integer NOT NULL DEFAULT 0,
    meta text COLLATE pg_catalog."default" NOT NULL,
    monto numeric(20, 2) DEFAULT 0,
    ejercicio character(5) COLLATE pg_catalog."default",
    institucion integer,
    unidadadministrativa integer,
    tipo character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '0'::bpchar,
    enero integer DEFAULT 0,
    febrero integer DEFAULT 0,
    marzo integer DEFAULT 0,
    abril integer DEFAULT 0,
    mayo integer DEFAULT 0,
    junio integer DEFAULT 0,
    julio integer DEFAULT 0,
    agosto integer DEFAULT 0,
    septiembre integer DEFAULT 0,
    octubre integer DEFAULT 0,
    noviembre integer DEFAULT 0,
    diciembre integer DEFAULT 0,
    umedida character varying(50) COLLATE pg_catalog."default",
    ejercicioejecucion character varying(4) COLLATE pg_catalog."default",
    unidadadministrativasolicitante integer DEFAULT 0,
    impacto integer,
    CONSTRAINT meta_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.modificaciones
(
    id integer NOT NULL DEFAULT nextval('modificaciones_id_seq'::regclass),
    ejercicio character varying(4) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    numero integer NOT NULL,
    fecha date NOT NULL,
    tipomodificacion integer NOT NULL,
    ngaceta character varying(50) COLLATE pg_catalog."default",
    fechagaceta date,
    nacuerdo character varying(50) COLLATE pg_catalog."default",
    fechaacuerdo date,
    ndecreto character varying(50) COLLATE pg_catalog."default",
    fechadecreto date,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    status character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::character varying,
    anulacion date,
    acredita numeric(20, 2) DEFAULT 0,
    debita numeric(20, 2) DEFAULT 0,
    ncredito character varying(50) COLLATE pg_catalog."default",
    fecharesolucion date,
    nresolucion character varying(50) COLLATE pg_catalog."default",
    usuario character varying(20) COLLATE pg_catalog."default",
    archivo1 character varying(100) COLLATE pg_catalog."default",
    archivo2 character varying(100) COLLATE pg_catalog."default",
    archivo3 character varying(100) COLLATE pg_catalog."default",
    archivo4 character varying(100) COLLATE pg_catalog."default",
    archivo5 character varying(100) COLLATE pg_catalog."default",
    fechacredito date,
    CONSTRAINT modificaciones_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.modificacionesdetalles
(
    id integer NOT NULL DEFAULT nextval('modificacionesdetalles_id_seq'::regclass),
    modificaciones integer NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    unidadadministrativa integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default" NOT NULL,
    ordinal integer,
    acredita numeric(20, 2) NOT NULL DEFAULT 0,
    debita numeric(20, 2) NOT NULL DEFAULT 0,
    ejecucion integer NOT NULL,
    disponibleeje numeric(20, 2) DEFAULT 0,
    disponibleord numeric(20, 2) DEFAULT 0,
    financiamiento integer,
    CONSTRAINT modificacionesdetalles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.movibancos
(
    id integer NOT NULL DEFAULT nextval('movibancos_id_seq'::regclass),
    banco integer NOT NULL,
    cuentabancaria integer NOT NULL,
    bancodestino integer,
    cuentabancariadestino integer,
    fecha date NOT NULL,
    referencia character varying(20) COLLATE pg_catalog."default" NOT NULL,
    tipomovimiento integer NOT NULL,
    proveedor integer,
    concepto text COLLATE pg_catalog."default",
    salterior numeric(24, 8) NOT NULL DEFAULT 0,
    acredita numeric(24, 8) NOT NULL DEFAULT 0,
    debita numeric(24, 8) DEFAULT 0,
    salactual numeric(24, 8) DEFAULT 0,
    ordenpago integer,
    egreso integer,
    cheque integer,
    disponible numeric(24, 8) DEFAULT 0,
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    anulacion date,
    idcheque integer DEFAULT 0,
    status character varying(15) COLLATE pg_catalog."default" DEFAULT 'Transito'::character varying,
    CONSTRAINT movibancos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.movimientos
(
    id integer NOT NULL DEFAULT nextval('movimientos_id_seq'::regclass),
    ejecucion integer NOT NULL,
    ordinal integer,
    tipomovimiento integer NOT NULL,
    fecha date NOT NULL,
    documento character varying(20) COLLATE pg_catalog."default" NOT NULL,
    aumento numeric(24, 8) NOT NULL DEFAULT 0,
    disminuye numeric(24, 8) NOT NULL DEFAULT 0,
    compromiso numeric(24, 8) NOT NULL DEFAULT 0,
    causado numeric(24, 8) NOT NULL DEFAULT 0,
    pagado numeric(24, 8) NOT NULL DEFAULT 0,
    ncredito integer DEFAULT 0,
    mcredito numeric(24, 8) DEFAULT 0,
    beneficiario integer,
    institucion integer DEFAULT 13,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT movimientos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.movimientosbancarios
(
    id integer NOT NULL DEFAULT nextval('movimientosbancarios_id_seq'::regclass),
    tipo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    accion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT movimientosbancarios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.municipio
(
    id integer NOT NULL DEFAULT nextval('municipio_id_seq'::regclass),
    estado integer NOT NULL,
    municipio character varying(50) COLLATE pg_catalog."default" NOT NULL,
    codigo character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT municipio_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapago
(
    id integer NOT NULL DEFAULT nextval('nominapago_id_seq'::regclass),
    institucion integer,
    tipopersonal integer,
    frecuencianomina integer,
    codigo integer,
    fdesde date,
    fhasta date,
    fechapago date,
    concepto character varying(200) COLLATE pg_catalog."default",
    status character varying(2) COLLATE pg_catalog."default",
    fecha date,
    asignaciones numeric(20, 2),
    deducciones numeric(20, 2),
    compromiso integer DEFAULT 0,
    idprenomina integer DEFAULT 0,
    CONSTRAINT nominapago_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapago2020
(
    id integer NOT NULL DEFAULT nextval('nominapago2020_id_seq'::regclass),
    institucion integer,
    tipopersonal integer,
    frecuencianomina integer,
    codigo integer,
    fdesde date,
    fhasta date,
    fechapago date,
    concepto character varying(200) COLLATE pg_catalog."default",
    status character varying(2) COLLATE pg_catalog."default",
    fecha date,
    asignaciones numeric(20, 2),
    deducciones numeric(20, 2),
    compromiso integer DEFAULT 0,
    CONSTRAINT nominapago2020_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalle
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalle_id_seq'::regclass),
    nominapago integer,
    fichapersonal integer,
    diaspagonomina numeric(6, 2),
    asignaciones numeric(24, 8),
    deducciones numeric(24, 8),
    neto numeric(24, 8),
    salariomensual numeric(24, 8) DEFAULT 0,
    cargo character varying(50) COLLATE pg_catalog."default",
    grado character varying(10) COLLATE pg_catalog."default",
    nivel character varying(10) COLLATE pg_catalog."default",
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    unidadadministrativa integer,
    tipopersona character varying(50) COLLATE pg_catalog."default",
    frecuencia character varying(50) COLLATE pg_catalog."default",
    cedula integer DEFAULT 0,
    idnominapagodetalle integer DEFAULT 0,
    CONSTRAINT nominapagodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalle2020
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalle2020_id_seq'::regclass),
    nominapago integer,
    fichapersonal integer,
    diaspagonomina numeric(6, 2),
    asignaciones numeric(20, 2),
    deducciones numeric(20, 2),
    neto numeric(20, 2),
    salariomensual numeric(20, 2) DEFAULT 0,
    cargo character varying(50) COLLATE pg_catalog."default",
    grado character varying(10) COLLATE pg_catalog."default",
    nivel character varying(10) COLLATE pg_catalog."default",
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    unidadadministrativa integer,
    tipopersona character varying(50) COLLATE pg_catalog."default",
    frecuencia character varying(50) COLLATE pg_catalog."default",
    cedula integer,
    CONSTRAINT nominapagodetalle2020_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalleconceptos
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalleconceptos_id_seq'::regclass),
    nominapagodetalle integer NOT NULL,
    diaspago numeric(6, 2) NOT NULL,
    concepto integer NOT NULL,
    asignacion numeric(24, 8) NOT NULL DEFAULT 0,
    deduccion numeric(24, 8) NOT NULL DEFAULT 0,
    aporte numeric(24, 8) NOT NULL DEFAULT 0,
    nominapago integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    unidadadministrativa character varying(100) COLLATE pg_catalog."default",
    existe smallint DEFAULT 0,
    CONSTRAINT nominapagodetalleconceptos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalleconceptos2020
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalleconceptos2020_id_seq'::regclass),
    nominapagodetalle integer NOT NULL,
    diaspago numeric(6, 2) NOT NULL,
    concepto integer NOT NULL,
    asignacion numeric(20, 2) NOT NULL DEFAULT 0,
    deduccion numeric(20, 2) NOT NULL DEFAULT 0,
    aporte numeric(20, 2) NOT NULL DEFAULT 0,
    nominapago integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    unidadadministrativa character varying(100) COLLATE pg_catalog."default",
    existe smallint DEFAULT 0
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalleconceptostemp
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalleconceptostemp_id_seq'::regclass),
    nominapagodetalletemp integer NOT NULL,
    diaspago numeric(6, 2) NOT NULL,
    concepto integer NOT NULL,
    asignacion numeric(20, 2) NOT NULL DEFAULT 0,
    deduccion numeric(20, 2) NOT NULL DEFAULT 0,
    aporte numeric(20, 2) NOT NULL DEFAULT 0,
    nominapago integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    unidadadministrativa character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT nominapagodetalleconceptostemp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagodetalletemp
(
    id integer NOT NULL DEFAULT nextval('nominapagodetalletemp_id_seq'::regclass),
    nominapagotemp integer,
    fichapersonal integer,
    diaspagonomina numeric(6, 2),
    asignaciones numeric(20, 2),
    deducciones numeric(20, 2),
    neto numeric(20, 2),
    salariomensual numeric(20, 2) DEFAULT 0,
    cargo character varying(50) COLLATE pg_catalog."default",
    grado character varying(10) COLLATE pg_catalog."default",
    nivel character varying(10) COLLATE pg_catalog."default",
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    unidadadministrativa integer,
    tipopersona character varying(50) COLLATE pg_catalog."default",
    frecuencia character varying(50) COLLATE pg_catalog."default",
    cedula integer,
    CONSTRAINT nominapagodetalletemp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nominapagotemp
(
    id integer NOT NULL DEFAULT nextval('nominapagotemp_id_seq'::regclass),
    institucion integer,
    tipopersonal integer,
    frecuencianomina integer,
    codigo integer,
    fdesde date,
    fhasta date,
    fechapago date,
    concepto character varying(200) COLLATE pg_catalog."default",
    status character varying(2) COLLATE pg_catalog."default",
    fecha date,
    asignaciones numeric(20, 2),
    deducciones numeric(20, 2),
    compromiso integer DEFAULT 0,
    CONSTRAINT nominapagotemp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.notacredito
(
    id integer NOT NULL DEFAULT nextval('notacredito_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    fecha date,
    banco integer,
    cuenta integer,
    referencia character varying(20) COLLATE pg_catalog."default",
    descripcion character varying(300) COLLATE pg_catalog."default" NOT NULL,
    monto numeric(24, 8) DEFAULT 0,
    disponible numeric(24, 8) DEFAULT 0,
    beneficiario integer
);

CREATE TABLE IF NOT EXISTS public.notadebito
(
    id integer NOT NULL DEFAULT nextval('notadebito_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    fecha date,
    banco integer,
    cuenta integer,
    referencia character varying(20) COLLATE pg_catalog."default",
    descripcion character varying(300) COLLATE pg_catalog."default" NOT NULL,
    monto numeric(24, 8) DEFAULT 0,
    disponible numeric(24, 8) DEFAULT 0,
    beneficiario integer
);

CREATE TABLE IF NOT EXISTS public.objetivoestrategico
(
    objetivohistorico integer NOT NULL,
    objetivonacional integer NOT NULL,
    objetivoestrategico integer NOT NULL,
    objetivo text COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL DEFAULT nextval('objetivoestrategico_id_seq'::regclass),
    ejercicio character varying COLLATE pg_catalog."default" DEFAULT '2021A'::character varying,
    CONSTRAINT objetivoestrategico_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.objetivoestrategicomunicipal
(
    objetivomunicipal integer NOT NULL,
    objetivo text COLLATE pg_catalog."default",
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer,
    id integer NOT NULL DEFAULT nextval('objetivoestrategicomunicipal_id_seq'::regclass),
    CONSTRAINT objetivoestrategicomunicipal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.objetivogeneral
(
    objetivohistorico integer NOT NULL,
    objetivonacional integer NOT NULL,
    objetivoestrategico integer NOT NULL,
    objetivogeneral integer NOT NULL,
    objetivo text COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL DEFAULT nextval('objetivogeneral_id_seq'::regclass),
    ejercicio character varying COLLATE pg_catalog."default" DEFAULT 2021,
    CONSTRAINT objetivogeneral_pkey PRIMARY KEY (objetivohistorico, objetivonacional, objetivoestrategico, objetivogeneral)
);

CREATE TABLE IF NOT EXISTS public.objetivohistorico
(
    id integer NOT NULL DEFAULT nextval('objetivohistorico_id_seq'::regclass),
    objetivo text COLLATE pg_catalog."default" NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT objetivohistorico_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.objetivonacional
(
    objetivohistorico integer NOT NULL,
    objetivonacional integer NOT NULL,
    objetivo text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT objetivonacional_pkey PRIMARY KEY (objetivohistorico, objetivonacional)
);

CREATE TABLE IF NOT EXISTS public.objetivonacional1
(
    objetivohistorico integer NOT NULL,
    objetivonacional integer NOT NULL,
    objetivo text COLLATE pg_catalog."default" NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.objetivopei
(
    id integer NOT NULL DEFAULT nextval('objetivopei_id_seq'::regclass),
    objetivo character varying(200) COLLATE pg_catalog."default",
    objetivomunicipal integer,
    institucion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    CONSTRAINT objetivopei_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.obras
(
    id integer NOT NULL DEFAULT nextval('obras_id_seq'::regclass),
    meta integer NOT NULL,
    tipoinfraestructura integer NOT NULL,
    codigo character(15) COLLATE pg_catalog."default" NOT NULL,
    subproyecto text COLLATE pg_catalog."default" NOT NULL,
    sector integer NOT NULL,
    montobase numeric(20, 2) NOT NULL DEFAULT 0,
    montoiva numeric(20, 2) NOT NULL DEFAULT 0,
    inicio date NOT NULL,
    fin date NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    producto integer NOT NULL,
    cuenta character varying(13) COLLATE pg_catalog."default",
    ejercicio character(5) COLLATE pg_catalog."default",
    institucion integer,
    unidadadministrativa integer,
    poa integer,
    financiamiento integer,
    avancefisico numeric(7, 2),
    estatus character varying(2) COLLATE pg_catalog."default",
    comp_aa numeric(20, 2) DEFAULT 0,
    comp_av numeric(20, 2) NOT NULL DEFAULT 0,
    eje_aa numeric(20, 2),
    eje_av numeric(20, 2) DEFAULT 0,
    est_ap numeric(20, 2) DEFAULT 0,
    umedida character varying(50) COLLATE pg_catalog."default",
    codigaaa character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT obras_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.obraspartidas
(
    id integer NOT NULL DEFAULT nextval('obraspartidas_id_seq'::regclass),
    obras integer NOT NULL,
    cuenta character varying(13) COLLATE pg_catalog."default" NOT NULL,
    financiamiento integer NOT NULL,
    monto numeric(20, 2) NOT NULL,
    CONSTRAINT obraspartidas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpago
(
    id integer NOT NULL DEFAULT nextval('ordenpago_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    fecha date NOT NULL,
    numero integer NOT NULL,
    beneficiario integer NOT NULL,
    anombre character varying(300) COLLATE pg_catalog."default" NOT NULL,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    montobruto numeric(20, 2) NOT NULL DEFAULT 0,
    montoretencion numeric(20, 2) NOT NULL DEFAULT 0,
    montoneto numeric(20, 2) NOT NULL DEFAULT 0,
    anulacion date,
    status character varying(1) COLLATE pg_catalog."default" NOT NULL,
    tipoorden character varying(1) COLLATE pg_catalog."default",
    montoiva numeric(20, 2) NOT NULL DEFAULT 0,
    montoexento numeric(20, 2) NOT NULL DEFAULT 0,
    ncompromiso character(50) COLLATE pg_catalog."default",
    reintegro numeric(20, 2) DEFAULT 0,
    usuario character varying(20) COLLATE pg_catalog."default",
    montopagado numeric(20, 2) DEFAULT 0,
    banco integer,
    cuentabancaria integer,
    fechaapagar date,
    CONSTRAINT ordenpago_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpagocompromisos
(
    id integer NOT NULL DEFAULT nextval('ordenpagocompromisos_id_seq'::regclass),
    ordenpago integer NOT NULL,
    compromiso integer,
    beneficiario integer NOT NULL,
    ejercicio character varying(4) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    CONSTRAINT ordenpagocompromisos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpagocredito
(
    id integer NOT NULL DEFAULT nextval('ordenpagocredito_id_seq'::regclass),
    ordenpago integer,
    compromiso integer NOT NULL,
    compromisodetalle integer NOT NULL,
    ncredito integer NOT NULL,
    causadocredito numeric(20, 2),
    disponiblecausadocredito numeric(20, 2),
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    ejecucion integer NOT NULL,
    financiamiento integer NOT NULL,
    status character varying(1) COLLATE pg_catalog."default" DEFAULT 0,
    pagadocredito numeric(20, 2),
    CONSTRAINT ordenpagocredito_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpagodetalle
(
    id integer NOT NULL DEFAULT nextval('ordenpagodetalle_id_seq'::regclass),
    ordenpago integer NOT NULL,
    compromiso integer NOT NULL,
    compromisodetalle integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    ejecucion integer NOT NULL,
    montocauasado numeric(24, 8) NOT NULL DEFAULT 0,
    disponiblecausado numeric(24, 8) NOT NULL DEFAULT 0,
    nrocredito integer,
    montocausadocredito numeric(24, 8) DEFAULT 0,
    disponiblecauasadocredito numeric(24, 8) DEFAULT 0,
    montopagado numeric(24, 8) NOT NULL DEFAULT 0,
    montopagadocredito numeric(24, 8) DEFAULT 0,
    cuenta character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT ordenpagodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpagofacturas
(
    id integer NOT NULL DEFAULT nextval('ordenpagofacturas_id_seq'::regclass),
    ordenpago integer NOT NULL,
    nrofactura character varying(15) COLLATE pg_catalog."default" NOT NULL,
    nrocontrol character varying(15) COLLATE pg_catalog."default" NOT NULL,
    fechafactura date NOT NULL,
    montobase numeric(24, 8) NOT NULL DEFAULT 0,
    montoexento numeric(24, 8) NOT NULL DEFAULT 0,
    montoanticipo numeric(24, 8) NOT NULL DEFAULT 0,
    montomulta numeric(24, 8) NOT NULL DEFAULT 0,
    montofielc numeric(24, 8) NOT NULL DEFAULT 0,
    montofianza numeric(24, 8) NOT NULL DEFAULT 0,
    poriva bigint DEFAULT 0,
    montoiva numeric(24, 8) NOT NULL DEFAULT 0,
    porretiva numeric(6, 2) DEFAULT 0,
    montoretiva numeric(24, 8) DEFAULT 0,
    porislr bigint DEFAULT 0,
    montoislr numeric(24, 8) DEFAULT 0,
    portimple bigint DEFAULT 0,
    montotibrefiscal numeric(24, 8) DEFAULT 0,
    montobaseneto numeric(24, 8) DEFAULT 0,
    beneficiario integer,
    sustraendo numeric(24, 8) DEFAULT 0,
    municipal numeric(24, 8) DEFAULT 0,
    pormunicipal numeric(6, 2) DEFAULT 0,
    CONSTRAINT ordenpagofacturas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenpagoretencion
(
    id integer NOT NULL DEFAULT nextval('ordenpagoretencion_id_seq'::regclass),
    ordenpago integer NOT NULL,
    retencion integer NOT NULL,
    monto numeric(24, 8),
    ejercicio character(5) COLLATE pg_catalog."default",
    dp integer,
    CONSTRAINT ordenpagoretencion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordinales
(
    id integer NOT NULL DEFAULT nextval('ordinales_id_seq'::regclass),
    ejecucion integer NOT NULL,
    codigo character(10) COLLATE pg_catalog."default" NOT NULL,
    inicial numeric(20, 2) NOT NULL DEFAULT 0,
    aumento numeric(20, 2) NOT NULL DEFAULT 0,
    disminucion numeric(20, 2) NOT NULL DEFAULT 0,
    actualizado numeric(20, 2) NOT NULL DEFAULT 0,
    porcomprometer numeric(20, 2) NOT NULL DEFAULT 0,
    comprometido numeric(20, 2) NOT NULL DEFAULT 0,
    causado numeric(20, 2) NOT NULL DEFAULT 0,
    pagado numeric(20, 2) NOT NULL DEFAULT 0,
    obra text COLLATE pg_catalog."default",
    tipoinfraestructura integer,
    ejercicio character varying(4) COLLATE pg_catalog."default",
    institucion integer,
    precomprometido numeric(20, 2) NOT NULL DEFAULT 0,
    CONSTRAINT ordinales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pagado
(
    id integer NOT NULL DEFAULT nextval('pagado_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    fecha date NOT NULL,
    tipopagado character varying(1) COLLATE pg_catalog."default",
    banco integer,
    cuenta integer,
    numero character varying(20) COLLATE pg_catalog."default" NOT NULL,
    compromiso integer,
    causado integer,
    beneficiario integer,
    montopagado numeric(24, 8) NOT NULL,
    anulacion date,
    status character varying(1) COLLATE pg_catalog."default",
    egreso integer,
    usuario character varying(70) COLLATE pg_catalog."default",
    tipo bigint DEFAULT 0,
    idop integer DEFAULT 0,
    idtransferencia integer DEFAULT 0,
    idcheque integer DEFAULT 0,
    CONSTRAINT pagado_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pagadocredito
(
    id integer NOT NULL,
    pagado integer,
    ordenpagocredito integer NOT NULL,
    compromisodetalle integer NOT NULL,
    ncredito integer NOT NULL,
    pagadocredito numeric(20, 2),
    disponiblepagadocredito numeric(20, 2),
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    ejecucion integer NOT NULL,
    financiamiento integer NOT NULL,
    status character varying(1) COLLATE pg_catalog."default" DEFAULT 0,
    compromiso integer,
    CONSTRAINT pagadocredito_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pagadodetalle
(
    id integer NOT NULL DEFAULT nextval('pagadodetalle_id_seq'::regclass),
    pagado integer NOT NULL,
    compromiso integer NOT NULL,
    causado integer NOT NULL,
    compromisodetalle integer NOT NULL,
    causadodetalle integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    ejecucion integer NOT NULL,
    montopagado numeric(24, 8) NOT NULL DEFAULT 0,
    disponiblepagado numeric(24, 8) NOT NULL DEFAULT 0,
    nrocredito integer,
    montopagadocredito numeric(24, 8) DEFAULT 0,
    disponiblepagadocredito numeric(24, 8) DEFAULT 0,
    CONSTRAINT pagadodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pagobeneficiario
(
    id integer NOT NULL DEFAULT nextval('pagobeneficiario_id_seq'::regclass),
    pago character varying(100) COLLATE pg_catalog."default",
    beneficiario integer,
    CONSTRAINT pagobeneficiario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.personal
(
    cedula integer,
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.poa
(
    id integer NOT NULL DEFAULT nextval('poa_id_seq'::regclass),
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    objetivohistorico integer NOT NULL,
    objetivonacional integer NOT NULL,
    objetivoestrategico integer NOT NULL,
    objetivogerenral integer,
    objetivomunicipal integer NOT NULL,
    unidadadministrativa integer NOT NULL,
    proyecto text COLLATE pg_catalog."default" NOT NULL,
    objetivoproyecto text COLLATE pg_catalog."default" NOT NULL,
    montoproyecto numeric(20, 2) DEFAULT 0,
    responsable integer,
    tipo character varying(1) COLLATE pg_catalog."default" DEFAULT 0,
    responsable1 integer DEFAULT 0,
    sncfestrategico integer,
    sncfespecifico integer,
    ejercicioejecucion character varying(5) COLLATE pg_catalog."default",
    psocial character varying(1) COLLATE pg_catalog."default",
    codigo character varying(20) COLLATE pg_catalog."default",
    tipoproyecto character varying(1) COLLATE pg_catalog."default",
    central character varying(1) COLLATE pg_catalog."default" DEFAULT 0,
    descripcion text COLLATE pg_catalog."default",
    objetivopei integer,
    CONSTRAINT poa_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.politicaspresu
(
    id integer NOT NULL DEFAULT nextval('politicaspresu_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    pfinanciera text COLLATE pg_catalog."default" NOT NULL,
    pgastos text COLLATE pg_catalog."default" NOT NULL,
    pservicio text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT politicaspresu_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.porcentajeantiguedad
(
    id integer NOT NULL DEFAULT nextval('porcentajeantiguedad_id_seq'::regclass),
    institucion integer NOT NULL,
    aservicio bigint,
    porcentaje numeric(6, 2) NOT NULL,
    CONSTRAINT porcentajeantiguedad_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.primaprofesion
(
    id integer NOT NULL DEFAULT nextval('primaprofesion_id_seq'::regclass),
    institucion integer,
    estudio character varying(50) COLLATE pg_catalog."default",
    monto integer,
    porcentaje integer,
    pocentajevalor character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT primaprofesion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.producto
(
    id integer NOT NULL DEFAULT nextval('producto_id_seq'::regclass),
    codigoproducto character(10) COLLATE pg_catalog."default" NOT NULL,
    codigoclase character(10) COLLATE pg_catalog."default",
    producto character varying(200) COLLATE pg_catalog."default",
    cuenta1 character(13) COLLATE pg_catalog."default",
    cuenta2 character(13) COLLATE pg_catalog."default",
    cuenta3 character(13) COLLATE pg_catalog."default",
    cuenta4 character(13) COLLATE pg_catalog."default",
    precio numeric(20, 2) NOT NULL DEFAULT 0,
    excento character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    precio2 numeric(20, 2),
    precio3 numeric(20, 2),
    precio4 numeric(20, 2),
    CONSTRAINT producto_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.productos
(
    codigo integer NOT NULL,
    clase integer NOT NULL,
    producto character(200) COLLATE pg_catalog."default",
    CONSTRAINT productos_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.pruebasecuencia
(
    id integer NOT NULL DEFAULT nextval('pruebasecuencia_id_seq'::regclass),
    codigo character varying(10) COLLATE pg_catalog."default",
    nombre character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT pruebasecuencia_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rebajaobras
(
    codigo character(9) COLLATE pg_catalog."default" NOT NULL,
    base numeric(20, 2),
    iva numeric(20, 2),
    CONSTRAINT rebajaobras_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.rebajarrhh
(
    sec character(14) COLLATE pg_catalog."default" NOT NULL,
    par character(13) COLLATE pg_catalog."default" NOT NULL,
    monto numeric(20, 2),
    s character(2) COLLATE pg_catalog."default",
    p character(2) COLLATE pg_catalog."default",
    a character(2) COLLATE pg_catalog."default",
    CONSTRAINT rebajarrhh_pkey PRIMARY KEY (sec, par)
);

CREATE TABLE IF NOT EXISTS public.recursoshumanos
(
    id integer NOT NULL DEFAULT nextval('recursoshumanos_id_seq'::regclass),
    meta integer NOT NULL,
    cuenta character varying(13) COLLATE pg_catalog."default" NOT NULL,
    monto numeric(20, 2) NOT NULL DEFAULT 0,
    financiamiento integer,
    CONSTRAINT recursoshumanos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.registrounicocargos
(
    id integer NOT NULL DEFAULT nextval('registrounicocargos_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    cargo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tipocargo integer,
    catcargo integer,
    cuenta character varying(20) COLLATE pg_catalog."default",
    tabulador smallint,
    grado character varying(5) COLLATE pg_catalog."default",
    nivel character varying(5) COLLATE pg_catalog."default",
    codigomdc integer,
    clasecargo character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT registrounicocargos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reportes
(
    id integer NOT NULL DEFAULT nextval('reportes_id_seq'::regclass),
    reporte character varying(50) COLLATE pg_catalog."default",
    tipo character varying(1) COLLATE pg_catalog."default",
    ruta character varying(50) COLLATE pg_catalog."default",
    formato character varying(5) COLLATE pg_catalog."default",
    descripcion character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT reportes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.responsableinstitucion
(
    id integer NOT NULL DEFAULT nextval('responsableinstitucion_id_seq'::regclass),
    ejercicio character(5) COLLATE pg_catalog."default",
    institucion integer,
    responsable integer,
    CONSTRAINT responsableinstitucion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.responsables
(
    cedula integer NOT NULL,
    nombres character varying(100) COLLATE pg_catalog."default",
    apellidos character varying(100) COLLATE pg_catalog."default",
    cargo character varying(100) COLLATE pg_catalog."default",
    institucion integer NOT NULL DEFAULT 0,
    email character varying(50) COLLATE pg_catalog."default",
    unidadadministrativa integer,
    categoria integer,
    cargos integer,
    id integer NOT NULL DEFAULT nextval('responsables_id_seq'::regclass),
    status character varying(1) COLLATE pg_catalog."default",
    ejercicio character varying(5) COLLATE pg_catalog."default",
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    CONSTRAINT responsables_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.retenciones
(
    id integer NOT NULL DEFAULT nextval('retenciones_id_seq'::regclass),
    retencion character varying(50) COLLATE pg_catalog."default" NOT NULL,
    porcentaje numeric(6, 2) NOT NULL DEFAULT 0,
    tipo character varying(1) COLLATE pg_catalog."default",
    tiporetencion smallint,
    CONSTRAINT retenciones_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.saldobancarios
(
    id integer NOT NULL DEFAULT nextval('saldobancarios_id_seq'::regclass),
    institucion integer NOT NULL,
    banco integer NOT NULL,
    cuentabancaria integer NOT NULL,
    mes smallint NOT NULL,
    ano smallint NOT NULL,
    saldoantlibro numeric(20, 2) DEFAULT 0,
    creditoslibro numeric(20, 2) DEFAULT 0,
    debitoslibro numeric(20, 2) DEFAULT 0,
    saldoactlibro numeric(20, 2) DEFAULT 0,
    saldoantbanco numeric(20, 2) DEFAULT 0,
    creditosbanco numeric(20, 2) DEFAULT 0,
    debitosbanco numeric(20, 2) DEFAULT 0,
    saldoactbanco numeric(20, 2) DEFAULT 0,
    CONSTRAINT saldobancarios_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sam_apps
(
    app_name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    app_type character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sam_apps_pkey PRIMARY KEY (app_name)
);

CREATE TABLE IF NOT EXISTS public.sam_groups
(
    group_id integer NOT NULL DEFAULT nextval('sam_groups_group_id_seq'::regclass),
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sam_groups_pkey PRIMARY KEY (group_id)
);

CREATE TABLE IF NOT EXISTS public.sam_groups_apps
(
    group_id integer NOT NULL,
    app_name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    priv_access character varying(1) COLLATE pg_catalog."default",
    priv_insert character varying(1) COLLATE pg_catalog."default",
    priv_delete character varying(1) COLLATE pg_catalog."default",
    priv_update character varying(1) COLLATE pg_catalog."default",
    priv_export character varying(1) COLLATE pg_catalog."default",
    priv_print character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT sam_groups_apps_pkey PRIMARY KEY (group_id, app_name)
);

CREATE TABLE IF NOT EXISTS public.sam_users
(
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    pswd character varying(32) COLLATE pg_catalog."default" NOT NULL,
    name character varying(64) COLLATE pg_catalog."default",
    email character varying(64) COLLATE pg_catalog."default",
    active character varying(1) COLLATE pg_catalog."default",
    activation_code character varying(32) COLLATE pg_catalog."default",
    priv_admin character varying(1) COLLATE pg_catalog."default",
    unidadadministrativa integer,
    institucion integer,
    sector character(2) COLLATE pg_catalog."default",
    programa character(2) COLLATE pg_catalog."default",
    subprograma character(2) COLLATE pg_catalog."default",
    proyecto character(2) COLLATE pg_catalog."default",
    actividad character(2) COLLATE pg_catalog."default",
    nivel character(2) COLLATE pg_catalog."default" DEFAULT '00'::bpchar,
    CONSTRAINT sam_users_pkey PRIMARY KEY (login)
);

CREATE TABLE IF NOT EXISTS public.sam_users_groups
(
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT sam_users_groups_pkey PRIMARY KEY (login, group_id)
);

CREATE TABLE IF NOT EXISTS public.sc_log
(
    id integer NOT NULL DEFAULT nextval('sc_log_id_seq'::regclass),
    inserted_date timestamp without time zone DEFAULT now(),
    username character varying(90) COLLATE pg_catalog."default" NOT NULL,
    application character varying(200) COLLATE pg_catalog."default" NOT NULL,
    creator character varying(30) COLLATE pg_catalog."default" NOT NULL,
    ip_user character varying(32) COLLATE pg_catalog."default" NOT NULL,
    action character varying(30) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT sc_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sec_apps
(
    app_name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    app_type character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sec_apps_pkey PRIMARY KEY (app_name)
);

CREATE TABLE IF NOT EXISTS public.sec_groups
(
    group_id integer NOT NULL DEFAULT nextval('sec_groups_group_id_seq'::regclass),
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sec_groups_pkey PRIMARY KEY (group_id)
);

CREATE TABLE IF NOT EXISTS public.sec_groups_apps
(
    group_id integer NOT NULL,
    app_name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    priv_access character varying(1) COLLATE pg_catalog."default",
    priv_insert character varying(1) COLLATE pg_catalog."default",
    priv_delete character varying(1) COLLATE pg_catalog."default",
    priv_update character varying(1) COLLATE pg_catalog."default",
    priv_export character varying(1) COLLATE pg_catalog."default",
    priv_print character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT sec_groups_apps_pkey PRIMARY KEY (group_id, app_name)
);

CREATE TABLE IF NOT EXISTS public.sec_logged
(
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    date_login character varying(128) COLLATE pg_catalog."default",
    sc_session character varying(200) COLLATE pg_catalog."default",
    ip character varying(32) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.sec_users
(
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    pswd character varying(32) COLLATE pg_catalog."default" NOT NULL,
    name character varying(64) COLLATE pg_catalog."default",
    email character varying(64) COLLATE pg_catalog."default",
    active character varying(1) COLLATE pg_catalog."default",
    activation_code character varying(32) COLLATE pg_catalog."default",
    priv_admin character varying(1) COLLATE pg_catalog."default",
    unidadadministrativa integer DEFAULT 0,
    institucion integer NOT NULL DEFAULT 0,
    sector character(2) COLLATE pg_catalog."default",
    programa character(2) COLLATE pg_catalog."default",
    subprograma character(2) COLLATE pg_catalog."default",
    proyecto character(2) COLLATE pg_catalog."default",
    actividad character(2) COLLATE pg_catalog."default",
    nivel character varying(2) COLLATE pg_catalog."default" DEFAULT '00'::character varying,
    nomina bigint DEFAULT 0,
    CONSTRAINT sec_users_pkey PRIMARY KEY (login)
);

CREATE TABLE IF NOT EXISTS public.sec_users_groups
(
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT sec_users_groups_pkey PRIMARY KEY (login, group_id)
);

CREATE TABLE IF NOT EXISTS public.sector
(
    id integer NOT NULL DEFAULT nextval('sector_id_seq'::regclass),
    sector text COLLATE pg_catalog."default" NOT NULL,
    ambito character varying(50) COLLATE pg_catalog."default",
    poblacion bigint,
    superficie character varying(50) COLLATE pg_catalog."default",
    tipoambito character varying(20) COLLATE pg_catalog."default",
    niveldesarrollo character varying(20) COLLATE pg_catalog."default",
    tipopoblacion character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT sector_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.segmento
(
    codigo integer NOT NULL,
    segmento character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT segmento_pkey PRIMARY KEY (codigo)
);

CREATE TABLE IF NOT EXISTS public.situacion
(
    id integer NOT NULL DEFAULT nextval('situacion_id_seq'::regclass),
    situacion character varying(40) COLLATE pg_catalog."default",
    accion character varying(3) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT situacion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sncfespecifico
(
    id integer NOT NULL,
    estrategico integer NOT NULL,
    objetivo character varying(200) COLLATE pg_catalog."default",
    especifico integer,
    CONSTRAINT sncfespecifico_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sncfestrategico
(
    id integer NOT NULL,
    objetivo character varying(150) COLLATE pg_catalog."default",
    CONSTRAINT sncfestrategico_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.solgaspre
(
    id integer NOT NULL DEFAULT nextval('solgaspre_id_seq'::regclass),
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    fecha date NOT NULL,
    numero character(30) COLLATE pg_catalog."default" NOT NULL,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    consecutivo integer NOT NULL DEFAULT 0,
    tiposgp integer NOT NULL,
    cotizacion integer NOT NULL DEFAULT 0,
    compromiso integer NOT NULL DEFAULT 0,
    ordenpago integer NOT NULL DEFAULT 0,
    uso text COLLATE pg_catalog."default",
    status character(2) COLLATE pg_catalog."default",
    monto numeric(20, 2),
    iva numeric(20, 2),
    total numeric(20, 2),
    anulacion date,
    CONSTRAINT solgaspre_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.solgasprebos
(
    id integer NOT NULL DEFAULT nextval('solgasprebos_id_seq'::regclass),
    solgaspre integer,
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer,
    bos integer NOT NULL,
    disponible numeric(20, 2) NOT NULL,
    cantidad numeric(10, 2) NOT NULL DEFAULT 0,
    precio numeric(20, 2) NOT NULL DEFAULT 0,
    descripcion text COLLATE pg_catalog."default" NOT NULL,
    umedida integer,
    cp character varying(13) COLLATE pg_catalog."default",
    obra integer DEFAULT 0
);

CREATE TABLE IF NOT EXISTS public.solgasprecp
(
    id integer NOT NULL DEFAULT nextval('solgasprecp_id_seq'::regclass),
    solgaspre integer NOT NULL,
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    financiamiento integer NOT NULL,
    disponible numeric(20, 2) NOT NULL,
    monto numeric(20, 2) NOT NULL DEFAULT 0,
    ejecucion integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default",
    CONSTRAINT solgasprecp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.solicitudgastos
(
    id integer NOT NULL DEFAULT nextval('solicitudgastos_id_seq'::regclass),
    fecha date NOT NULL,
    tiposgp integer NOT NULL,
    ejercicio character varying(4) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    numero character varying(20) COLLATE pg_catalog."default" NOT NULL,
    concepto text COLLATE pg_catalog."default" NOT NULL,
    tipocompromiso integer,
    montocompromiso numeric(20, 2) NOT NULL DEFAULT 0,
    ncompromiso integer,
    beneficiario integer,
    obra integer,
    fechadesde date,
    fechahasta date,
    anticipo numeric(5, 2) DEFAULT 0,
    usobien character varying(200) COLLATE pg_catalog."default",
    anulacion date,
    status character varying(1) COLLATE pg_catalog."default" DEFAULT 1,
    cotizacion integer,
    compromiso integer,
    ordenpago integer,
    montoiva numeric(20, 2) DEFAULT 0,
    CONSTRAINT solicitudgastos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.solicitudgastosdetalle
(
    id integer NOT NULL DEFAULT nextval('solicitudgastosdetalle_id_seq'::regclass),
    solicitudgastos integer NOT NULL,
    ejercicio character(4) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL,
    dp integer NOT NULL,
    poa integer NOT NULL,
    meta integer NOT NULL,
    cp character varying(13) COLLATE pg_catalog."default",
    financiamiento integer NOT NULL,
    obra integer,
    codigoproducto integer,
    producto character varying(250) COLLATE pg_catalog."default",
    cantidad numeric(10, 2),
    monto numeric(20, 2),
    disponibilidad numeric(20, 2),
    ejecucion integer NOT NULL,
    CONSTRAINT solicitudgastosdetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.subtipopersonal
(
    id integer NOT NULL DEFAULT nextval('subtipopersonal_id_seq'::regclass),
    tipopersonal integer,
    denominacion character varying(100) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT subtipopersonal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.supuesto
(
    id integer NOT NULL DEFAULT nextval('supuesto_id_seq'::regclass),
    meta integer NOT NULL,
    supuesto character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT supuesto_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladordetalle
(
    id integer NOT NULL DEFAULT nextval('tabuladordetalle_id_seq'::regclass),
    tabuladores smallint NOT NULL,
    grado character varying(10) COLLATE pg_catalog."default" DEFAULT 0,
    nivel character varying(10) COLLATE pg_catalog."default" DEFAULT 0,
    valor numeric(20, 2) DEFAULT 0,
    descripcion character varying(60) COLLATE pg_catalog."default",
    CONSTRAINT tabuladordetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladores
(
    id integer NOT NULL DEFAULT nextval('tabuladores_id_seq'::regclass),
    institucion integer NOT NULL,
    fechavigencia date NOT NULL,
    concepto character varying(150) COLLATE pg_catalog."default" NOT NULL,
    tabuladortipo smallint NOT NULL,
    niveles numeric(8, 4) NOT NULL DEFAULT 0,
    grado numeric(8, 4) NOT NULL DEFAULT 0,
    salariominimo numeric(20, 2) DEFAULT 0,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    cantidadx smallint DEFAULT 0,
    cantidady smallint DEFAULT 0,
    tipo character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT tabuladores_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladorgenerados
(
    id integer NOT NULL DEFAULT nextval('tabuladorgenerados_id_seq'::regclass),
    institucion integer NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default" NOT NULL,
    tipotabulador integer NOT NULL,
    salario numeric(20, 2) NOT NULL DEFAULT 0,
    cargo character varying(80) COLLATE pg_catalog."default",
    gradotabulador character varying(2) COLLATE pg_catalog."default",
    orden character(3) COLLATE pg_catalog."default",
    nivel character(3) COLLATE pg_catalog."default",
    CONSTRAINT tabuladoresgeneradors_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladorrrhh
(
    id integer NOT NULL DEFAULT nextval('tabuladorrrhh_id_seq'::regclass),
    institucion integer,
    codigo character varying(10) COLLATE pg_catalog."default",
    tipopersonal integer,
    fechavigencia date,
    status character varying(1) COLLATE pg_catalog."default",
    salariominimo numeric(20, 2),
    CONSTRAINT tabuladorrrhh_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladorrrhhdetalle
(
    id integer NOT NULL DEFAULT nextval('tabuladorrrhhdetalle_id_seq'::regclass),
    tabuladorrrhh integer,
    x character varying(10) COLLATE pg_catalog."default",
    y character varying(10) COLLATE pg_catalog."default",
    monto numeric(20, 2),
    CONSTRAINT tabuladorrrhhdetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tabuladortipo
(
    id integer NOT NULL DEFAULT nextval('tabuladortipo_id_seq'::regclass),
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tabuladortipo_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.talentohumano
(
    id integer NOT NULL DEFAULT nextval('talentohumano_id_seq'::regclass),
    institucion integer NOT NULL,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    unidadadministrativa integer NOT NULL,
    registrounicocargos integer NOT NULL,
    tabulador integer,
    sexo character varying(1) COLLATE pg_catalog."default",
    status character varying(1) COLLATE pg_catalog."default",
    tabuladordetalle integer NOT NULL,
    salario numeric(20, 2) DEFAULT 0,
    nivel character varying(10) COLLATE pg_catalog."default",
    grado character varying(10) COLLATE pg_catalog."default",
    salarioreal numeric(20, 2),
    compreal numeric(20, 2),
    primareal numeric(20, 2),
    dietareal numeric(20, 2),
    generoreal character varying(1) COLLATE pg_catalog."default",
    statusreal character varying(1) COLLATE pg_catalog."default",
    salarioest numeric(20, 2),
    compeesti numeric(20, 2),
    primaesti numeric(20, 2),
    priampre numeric(20, 2),
    compepre numeric(20, 2),
    dietaest numeric(20, 2),
    dietapre numeric(20, 2),
    generoest character varying(1) COLLATE pg_catalog."default",
    statusest character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT talentohumano_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.talentohumanodetalle
(
    id integer NOT NULL DEFAULT nextval('talentohumanodetalle_id_seq'::regclass),
    talentohumano integer,
    cuenta character varying(20) COLLATE pg_catalog."default",
    asignacion numeric(10, 2),
    CONSTRAINT talentohumanodetalle_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipocompromiso
(
    id integer NOT NULL DEFAULT nextval('tipocompromiso_id_seq'::regclass),
    tipo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipocompromiso_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipoinfraestructura
(
    id integer NOT NULL DEFAULT nextval('tipoinfraestructura_id_seq'::regclass),
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    institucion integer NOT NULL DEFAULT 0,
    prefijo character(5) COLLATE pg_catalog."default" NOT NULL,
    tipo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    consecutivo integer NOT NULL DEFAULT 0,
    ejecucion character(5) COLLATE pg_catalog."default",
    CONSTRAINT tipoinfraestructura_pkey PRIMARY KEY (ejercicio, institucion, prefijo)
);

CREATE TABLE IF NOT EXISTS public.tipomodificacion
(
    id integer NOT NULL DEFAULT nextval('tipomodificacion_id_seq'::regclass),
    tipo character varying(100) COLLATE pg_catalog."default",
    accion character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tipomovimiento_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipopersonal
(
    id integer NOT NULL DEFAULT nextval('tipopersonal_id_seq'::regclass),
    tipo character varying(70) COLLATE pg_catalog."default",
    frecuenciapago character varying(1) COLLATE pg_catalog."default",
    institucion integer,
    tipopersonal character varying(1) COLLATE pg_catalog."default",
    grupo character varying(2) COLLATE pg_catalog."default",
    CONSTRAINT tipopersonal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tiporetencion
(
    id integer NOT NULL DEFAULT nextval('tiporetencion_id_seq'::regclass),
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tiporetencion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tiposgp
(
    id integer NOT NULL DEFAULT nextval('tiposgp_id_seq'::regclass),
    denominacion character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT tiposgp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipotabulador
(
    id integer NOT NULL DEFAULT nextval('tipotabulador_id_seq'::regclass),
    institucion integer,
    ejercicio character varying(5) COLLATE pg_catalog."default",
    numero smallint NOT NULL,
    salariominimo numeric(15, 2) NOT NULL DEFAULT 0,
    clasificadorpresupuestario character varying(13) COLLATE pg_catalog."default",
    tabulador integer NOT NULL,
    CONSTRAINT tipotabulador_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transferencia
(
    id integer NOT NULL DEFAULT nextval('transferencia_id_seq'::regclass),
    banco integer,
    cuenta integer,
    chequera integer,
    cheque integer,
    fecha date,
    beneficiario integer,
    montocheque numeric(24, 8),
    anulacion date,
    ordenpago character varying(100) COLLATE pg_catalog."default",
    ejercicio character varying(5) COLLATE pg_catalog."default",
    institucion integer,
    concepto character varying(800) COLLATE pg_catalog."default",
    tipo character varying(1) COLLATE pg_catalog."default",
    bancodestino integer,
    cuentadestino integer,
    referenciadestino character varying(20) COLLATE pg_catalog."default",
    disponible numeric(24, 8),
    egreso integer,
    montoorden numeric(24, 8) DEFAULT 0,
    motivo character varying(100) COLLATE pg_catalog."default",
    referencia character varying(20) COLLATE pg_catalog."default",
    idop integer DEFAULT 0,
    CONSTRAINT transferencia_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transferenciasordeness
(
    id integer NOT NULL DEFAULT nextval('transferenciasordeness_id_seq'::regclass),
    ordenpago integer,
    transferencia integer,
    montocheque numeric(20, 2),
    CONSTRAINT transferenciasordenes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.txtbancosnomina
(
    id integer NOT NULL DEFAULT nextval('txtbancosnomina_id_seq'::regclass),
    institucion integer,
    banco integer,
    cuentabancaria integer,
    tipopersonal integer,
    nomina integer,
    montoapagar numeric(20, 2),
    npersonas integer,
    txt character varying(150) COLLATE pg_catalog."default",
    fecha date,
    grupo integer,
    consecutivo integer,
    CONSTRAINT txtbancosnomina_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.umedida
(
    id integer NOT NULL DEFAULT nextval('umedida_id_seq'::regclass),
    denominacion character(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_umedida PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.unidadadministrativa
(
    ejercicio character(5) COLLATE pg_catalog."default" NOT NULL,
    sector character(2) COLLATE pg_catalog."default" NOT NULL,
    programa character(2) COLLATE pg_catalog."default" NOT NULL,
    subprograma character varying(2) COLLATE pg_catalog."default" NOT NULL,
    proyecto character varying(2) COLLATE pg_catalog."default" NOT NULL,
    actividad character varying(2) COLLATE pg_catalog."default" NOT NULL,
    denominacion character varying(200) COLLATE pg_catalog."default" NOT NULL,
    unidadejecutora character varying(200) COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL DEFAULT nextval('unidadadministrativa_id_seq'::regclass),
    institucion integer NOT NULL,
    nivel character varying(2) COLLATE pg_catalog."default" NOT NULL DEFAULT '00'::character varying,
    ejercicioejecucion character varying(4) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    telefono character varying(50) COLLATE pg_catalog."default",
    descripcion text COLLATE pg_catalog."default",
    inversion character varying(1) COLLATE pg_catalog."default",
    codigo character varying(3) COLLATE pg_catalog."default",
    tipo character(1) COLLATE pg_catalog."default",
    nivelejecutor character varying COLLATE pg_catalog."default" DEFAULT 'N'::character varying,
    CONSTRAINT unidadadministrativa_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.unidadadministrativarrhh
(
    id integer NOT NULL DEFAULT nextval('unidadadministrativarrhh_id_seq'::regclass),
    sector character varying(2) COLLATE pg_catalog."default",
    programa character varying(2) COLLATE pg_catalog."default",
    subprograma character varying(2) COLLATE pg_catalog."default",
    proyecto character varying(2) COLLATE pg_catalog."default",
    actividad character varying(2) COLLATE pg_catalog."default",
    denominacion character varying(200) COLLATE pg_catalog."default",
    institucion integer,
    CONSTRAINT unidadadministrativarrhh_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.unidadmedida
(
    id integer NOT NULL DEFAULT nextval('unidadmedida_id_seq'::regclass),
    unidadmedida character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT unidadmedida_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usuarios_nom
(
    id integer NOT NULL DEFAULT nextval('usuarios_nom_id_seq'::regclass),
    usuario character varying(50) COLLATE pg_catalog."default",
    clave text COLLATE pg_catalog."default",
    cedulas integer,
    nombres character varying(50) COLLATE pg_catalog."default",
    apellidos character varying(50) COLLATE pg_catalog."default",
    correo character varying(100) COLLATE pg_catalog."default",
    pregunta character varying(100) COLLATE pg_catalog."default",
    respuesta text COLLATE pg_catalog."default",
    fecha timestamp without time zone DEFAULT now(),
    log integer NOT NULL DEFAULT 0,
    foto text COLLATE pg_catalog."default",
    CONSTRAINT usuarios_nom_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.variablesnomina
(
    id integer NOT NULL DEFAULT nextval('variablesnomina_id_seq'::regclass),
    institucion integer,
    variable character varying(20) COLLATE pg_catalog."default",
    descripcion character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT variablesnomina_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.verificacion
(
    id integer NOT NULL DEFAULT nextval('verificacion_id_seq'::regclass),
    meta integer NOT NULL,
    verificacion character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT verificacion_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.actividades
    ADD CONSTRAINT actividades_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.bienesservicios
    ADD CONSTRAINT bienesservicios_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.bienesservicios
    ADD CONSTRAINT bienesservicios_producto_fkey FOREIGN KEY (producto)
    REFERENCES public.producto (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bos
    ADD CONSTRAINT bos_clase_fkey FOREIGN KEY (clase)
    REFERENCES public.clase (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bos
    ADD CONSTRAINT bos_familia_fkey FOREIGN KEY (familia)
    REFERENCES public.familia (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bos
    ADD CONSTRAINT bos_producto_fkey FOREIGN KEY (producto)
    REFERENCES public.productos (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bos
    ADD CONSTRAINT bos_segmento_fkey FOREIGN KEY (segmento)
    REFERENCES public.segmento (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cargo
    ADD CONSTRAINT cargo_categoriacargo_fkey FOREIGN KEY (categoriacargo)
    REFERENCES public.categoriacargo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.causadodetalle
    ADD CONSTRAINT causadodetalle_causado_fkey FOREIGN KEY (causado)
    REFERENCES public.causado (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.chequesordenes
    ADD CONSTRAINT fk_chequesordenes FOREIGN KEY (cheque)
    REFERENCES public.cheques (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.clase
    ADD CONSTRAINT clase_familia_fkey FOREIGN KEY (familia)
    REFERENCES public.familia (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comprascp
    ADD CONSTRAINT fk_compras_compracp FOREIGN KEY (compras)
    REFERENCES public.compras (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.comprascreditoa
    ADD CONSTRAINT fk_compras_comprascreditoa FOREIGN KEY (compras)
    REFERENCES public.compras (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.comprasdetalle
    ADD CONSTRAINT fk_compras_comprasdetalle FOREIGN KEY (compras)
    REFERENCES public.compras (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.compromisodetalle
    ADD CONSTRAINT compromisodetalle_compromiso_fkey FOREIGN KEY (compromiso)
    REFERENCES public.compromisos (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.compromisos
    ADD CONSTRAINT compromisos_beneficiario_fkey FOREIGN KEY (beneficiario)
    REFERENCES public.beneficiario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.compromisos
    ADD CONSTRAINT compromisos_dp_fkey FOREIGN KEY (dp)
    REFERENCES public.unidadadministrativa (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.compromisos
    ADD CONSTRAINT compromisos_institucion_fkey FOREIGN KEY (institucion)
    REFERENCES public.institucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.conciliaciondetalle
    ADD CONSTRAINT fk_conciliacion_conciliaciondetalle FOREIGN KEY (conciliacion)
    REFERENCES public.conciliacion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contratacionbosgeneral
    ADD CONSTRAINT fk_contratacion_general FOREIGN KEY (contratacionempresas)
    REFERENCES public.contratacionempresas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contratacionbosprov
    ADD CONSTRAINT fk_contratatacionempresas_bos FOREIGN KEY (contratacionempresas)
    REFERENCES public.contratacionempresas (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contratacionempresas
    ADD CONSTRAINT fk_contratacion_beneficiario FOREIGN KEY (contratacion)
    REFERENCES public.contratacion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contratacionevaluacion
    ADD CONSTRAINT fk_contratacion_evaluacion FOREIGN KEY (contratacion)
    REFERENCES public.contratacion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.contratacionsgp
    ADD CONSTRAINT fk_contratacion_sgp FOREIGN KEY (contratacion)
    REFERENCES public.contratacion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cotizacionbos
    ADD CONSTRAINT fk_cotizacionbos_cotizacionp FOREIGN KEY (cotizacionp)
    REFERENCES public.cotizacionp (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cotizacionp
    ADD CONSTRAINT fk_cotizacion_cotizacion_beneficiario FOREIGN KEY (cotizacion)
    REFERENCES public.cotizacion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.creditosadicionales
    ADD CONSTRAINT creditosadicionales_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cuenta
    ADD CONSTRAINT cuenta_banco_fkey FOREIGN KEY (banco)
    REFERENCES public.banco (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cuentasbancarias
    ADD CONSTRAINT cuentasbancarias_banco_fkey FOREIGN KEY (banco)
    REFERENCES public.banco (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ejecucion
    ADD CONSTRAINT ejecucion_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ejecucion
    ADD CONSTRAINT ejecucion_poa_fkey FOREIGN KEY (poa)
    REFERENCES public.poa (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ejecucionpresupuestaria
    ADD CONSTRAINT ejecucionpresupuestaria_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.familia
    ADD CONSTRAINT familia_segmento_fkey FOREIGN KEY (segmento)
    REFERENCES public.segmento (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fichapersonal
    ADD CONSTRAINT fk_funcionarioficha FOREIGN KEY (funcionario)
    REFERENCES public.funcionario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fichapersonaltabulador
    ADD CONSTRAINT fk_fichapersonaltabulador FOREIGN KEY (fichapersonal)
    REFERENCES public.fichapersonal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.funcionarioestudios
    ADD CONSTRAINT fk_funcionarioestudio FOREIGN KEY (funcionario)
    REFERENCES public.funcionario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.funcionariohijos
    ADD CONSTRAINT fk_funcionariohijo FOREIGN KEY (funcionario)
    REFERENCES public.funcionario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.funcionariolaboral
    ADD CONSTRAINT fk_funcionariolaboral FOREIGN KEY (funcionario)
    REFERENCES public.funcionario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.gradostabulador
    ADD CONSTRAINT gradostabulador_tipotabulador_fkey FOREIGN KEY (tipotabulador)
    REFERENCES public.tipotabulador (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.indicadores
    ADD CONSTRAINT indicadores_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ingresos
    ADD CONSTRAINT ingresos_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ingresos
    ADD CONSTRAINT ingresos_institucion_fkey FOREIGN KEY (institucion)
    REFERENCES public.institucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.meta
    ADD CONSTRAINT meta_poa_fkey FOREIGN KEY (poa)
    REFERENCES public.poa (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.modificacionesdetalles
    ADD CONSTRAINT modificacionesdetalles_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.modificacionesdetalles
    ADD CONSTRAINT modificacionesdetalles_modificaciones_fkey FOREIGN KEY (modificaciones)
    REFERENCES public.modificaciones (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.movimientos
    ADD CONSTRAINT movimientos_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.nominapagodetalle
    ADD CONSTRAINT fk_nominapago_fichapersonal FOREIGN KEY (fichapersonal)
    REFERENCES public.fichapersonal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.nominapagodetalle
    ADD CONSTRAINT fk_nominapago_nominapagodetalle FOREIGN KEY (nominapago)
    REFERENCES public.nominapago (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.objetivoestrategicomunicipal
    ADD CONSTRAINT objetivoestrategicomunicipal_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.obras
    ADD CONSTRAINT obras_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.obraspartidas
    ADD CONSTRAINT obraspartidas_obras_fkey FOREIGN KEY (obras)
    REFERENCES public.obras (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ordenpagocompromisos
    ADD CONSTRAINT ordenpagocompromisos_ordenpago_fkey FOREIGN KEY (ordenpago)
    REFERENCES public.ordenpago (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenpagocredito
    ADD CONSTRAINT ordenpagocredito_ordenpago_fkey FOREIGN KEY (ordenpago)
    REFERENCES public.ordenpago (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenpagodetalle
    ADD CONSTRAINT ordenpagodetalle_ordenpago_fkey FOREIGN KEY (ordenpago)
    REFERENCES public.ordenpago (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenpagofacturas
    ADD CONSTRAINT ordenpagofacturas_ordenpago_fkey FOREIGN KEY (ordenpago)
    REFERENCES public.ordenpago (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenpagoretencion
    ADD CONSTRAINT ordenpagoretencion_ordenpago_fkey FOREIGN KEY (ordenpago)
    REFERENCES public.ordenpago (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenpagoretencion
    ADD CONSTRAINT ordenpagoretencion_retencion_fkey FOREIGN KEY (retencion)
    REFERENCES public.retenciones (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordinales
    ADD CONSTRAINT ordinales_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.pagadocredito
    ADD CONSTRAINT pagadocredito_ordenpago_fkey FOREIGN KEY (pagado)
    REFERENCES public.pagado (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagadodetalle
    ADD CONSTRAINT pagadodetalle_pagado_fkey FOREIGN KEY (pagado)
    REFERENCES public.pagado (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.poa
    ADD CONSTRAINT poa_unidadadministrativa_fkey FOREIGN KEY (unidadadministrativa)
    REFERENCES public.unidadadministrativa (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.politicaspresu
    ADD CONSTRAINT politicaspresu_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.politicaspresu
    ADD CONSTRAINT politicaspresu_institucion_fkey FOREIGN KEY (institucion)
    REFERENCES public.institucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.productos
    ADD CONSTRAINT productos_clase_fkey FOREIGN KEY (clase)
    REFERENCES public.clase (codigo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recursoshumanos
    ADD CONSTRAINT recursoshumanos_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.registrounicocargos
    ADD CONSTRAINT registrounicocargos_catcargo_fkey FOREIGN KEY (catcargo)
    REFERENCES public.cargo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.registrounicocargos
    ADD CONSTRAINT registrounicocargos_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.registrounicocargos
    ADD CONSTRAINT registrounicocargos_institucion_fkey FOREIGN KEY (institucion)
    REFERENCES public.institucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.registrounicocargos
    ADD CONSTRAINT registrounicocargos_tipocargo_fkey FOREIGN KEY (tipocargo)
    REFERENCES public.categoriacargo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.responsableinstitucion
    ADD CONSTRAINT fk_institucion_responsable FOREIGN KEY (responsable)
    REFERENCES public.responsables (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.responsables
    ADD CONSTRAINT responsables_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sam_groups_apps
    ADD CONSTRAINT groups_apps_ibfk_1 FOREIGN KEY (group_id)
    REFERENCES public.sam_groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sam_groups_apps
    ADD CONSTRAINT groups_apps_ibfk_2 FOREIGN KEY (app_name)
    REFERENCES public.sam_apps (app_name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sam_users_groups
    ADD CONSTRAINT users_groups_ibfk_1 FOREIGN KEY (login)
    REFERENCES public.sam_users (login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sam_users_groups
    ADD CONSTRAINT users_groups_ibfk_2 FOREIGN KEY (group_id)
    REFERENCES public.sam_groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sec_groups_apps
    ADD CONSTRAINT groups_apps_ibfk_1 FOREIGN KEY (group_id)
    REFERENCES public.sec_groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sec_groups_apps
    ADD CONSTRAINT groups_apps_ibfk_2 FOREIGN KEY (app_name)
    REFERENCES public.sec_apps (app_name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sec_users_groups
    ADD CONSTRAINT users_groups_ibfk_1 FOREIGN KEY (login)
    REFERENCES public.sec_users (login) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sec_users_groups
    ADD CONSTRAINT users_groups_ibfk_2 FOREIGN KEY (group_id)
    REFERENCES public.sec_groups (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.solgasprecp
    ADD CONSTRAINT fk_solgaspre_solgasprecp FOREIGN KEY (solgaspre)
    REFERENCES public.solgaspre (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.solicitudgastosdetalle
    ADD CONSTRAINT solicitudgastosdetalle_dp_fkey FOREIGN KEY (dp)
    REFERENCES public.unidadadministrativa (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.solicitudgastosdetalle
    ADD CONSTRAINT solicitudgastosdetalle_ejecucion_fkey FOREIGN KEY (ejecucion)
    REFERENCES public.ejecucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.solicitudgastosdetalle
    ADD CONSTRAINT solicitudgastosdetalle_solicitudgastos_fkey FOREIGN KEY (solicitudgastos)
    REFERENCES public.solicitudgastos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.supuesto
    ADD CONSTRAINT supuesto_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tabuladordetalle
    ADD CONSTRAINT tabuladordetalle_tabuladores_fkey FOREIGN KEY (tabuladores)
    REFERENCES public.tabuladores (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tabuladores
    ADD CONSTRAINT tabuladores_institucion_fkey FOREIGN KEY (institucion)
    REFERENCES public.institucion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tabuladores
    ADD CONSTRAINT tabuladores_tabuladortipo_fkey FOREIGN KEY (tabuladortipo)
    REFERENCES public.tabuladortipo (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tabuladorrrhhdetalle
    ADD CONSTRAINT fk_tabuladorrrhh FOREIGN KEY (tabuladorrrhh)
    REFERENCES public.tabuladorrrhh (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.talentohumanodetalle
    ADD CONSTRAINT talentohumanodetalle_talentohumano_fkey FOREIGN KEY (talentohumano)
    REFERENCES public.talentohumano (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transferenciasordeness
    ADD CONSTRAINT fk_transferenciaordenes FOREIGN KEY (transferencia)
    REFERENCES public.transferencia (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.unidadadministrativa
    ADD CONSTRAINT unidadadministrativa_ejercicio_fkey FOREIGN KEY (ejercicio)
    REFERENCES public.ejercicio (ejercicio) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.verificacion
    ADD CONSTRAINT verificacion_meta_fkey FOREIGN KEY (meta)
    REFERENCES public.meta (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;